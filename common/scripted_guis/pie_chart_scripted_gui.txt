# Scripted GUI Pie Chart example by Yard1
# Feel free to use in your mods, but give credits to Yard1 (both in code, with comments; and on your download page)

scripted_gui = {
	
	population_culture_ui = {
		context_type = selected_state_context
		
		window_name = "population_culture_ui_window"
		parent_window_token = selected_state_view

		visible = {
			always = yes
		}
		effects = {
			advisor_button_click = {
				ROOT = {
					every_controlled_state = {
						set_variable = { state_ministers = 0 }
						if = { 
							limit = { check_variable = { fire_state_minister > 0 } }
							clear_variable = fire_state_minister
							subtract_from_variable = { fire_pop_growth = 1 }
						}
						if = { 
							limit = { check_variable = { earth_state_minister > 0 } }
							clear_variable = earth_state_minister
							subtract_from_variable = { earth_pop_growth = 1 }
						}
						if = { 
							limit = { check_variable = { water_state_minister > 0 } }
							clear_variable = water_state_minister
							subtract_from_variable = { water_pop_growth = 1 }
						}
						if = { 
							limit = { check_variable = { air_state_minister > 0 } }
							clear_variable = air_state_minister
							subtract_from_variable = { air_pop_growth = 1 }
						}
						if = { 
							limit = { check_variable = { nonbender_state_minister > 0 } }
							clear_variable = nonbender_state_minister
							subtract_from_variable = { nonbender_pop_growth = 1 }
						}
					}
				}
				set_variable = { state_ministers = 1 }
				if = {
					limit = {
						ROOT = {
						has_idea_with_trait = chauvinist
						}
					}
					add_to_variable = { fire_pop_growth = 1 }
					set_variable = { fire_state_minister = 1 }
				}
				if = {
					limit = {
						ROOT = {
						OR = {
							has_idea_with_trait = royalist
							has_idea_with_trait = extreme_royalist
						}
						}
					}
					add_to_variable = { earth_pop_growth = 1 }
					set_variable = { earth_state_minister = 1 }
				}
				if = {
					limit = {
						ROOT = {
						has_idea_with_trait = naturalist
						}
					}
					add_to_variable = { water_pop_growth = 1 }
					set_variable = { water_state_minister = 1 }
				}
				if = {
					limit = {
						ROOT = {
						has_idea_with_trait = pacifist
						}
					}
					add_to_variable = { air_pop_growth = 1 }
					set_variable = { air_state_minister = 1 }
				}
				if = {
					limit = {
						ROOT = {
						has_idea_with_trait = multiculturalist
						}
					}
					add_to_variable = { nonbender_pop_growth = 1 }
					set_variable = { nonbender_state_minister = 1 }
				}
				ROOT = {
					culture_growth_calculation = yes
				}
			}
			assigned_advisor_button_click = {
				set_variable = { state_ministers = 0 }
				if = { 
					limit = { check_variable = { fire_state_minister > 0 } }
					clear_variable = fire_state_minister
					subtract_from_variable = { fire_pop_growth = 1 }
				}
				if = { 
					limit = { check_variable = { earth_state_minister > 0 } }
					clear_variable = earth_state_minister
					subtract_from_variable = { earth_pop_growth = 1 }
				}
				if = { 
					limit = { check_variable = { water_state_minister > 0 } }
					clear_variable = water_state_minister
					subtract_from_variable = { water_pop_growth = 1 }
				}
				if = { 
					limit = { check_variable = { air_state_minister > 0 } }
					clear_variable = air_state_minister
					subtract_from_variable = { air_pop_growth = 1 }
				}
				if = { 
					limit = { check_variable = { nonbender_state_minister > 0 } }
					clear_variable = nonbender_state_minister
					subtract_from_variable = { nonbender_pop_growth = 1 }
				}
				ROOT = {
					culture_growth_calculation = yes
				}
			}
		}
		triggers = {
			advisor_button_click_enabled = {
				ROOT = {
					any_character = {
						AND = {
							is_character_slot = minister_of_culture
							has_character_flag = selected_cultural
						}
					}
				}
			}
			advisor_button_visible = {
				check_variable = {
					state_ministers < 1
				}
				is_controlled_by = ROOT
			}

			assigned_advisor_button_click_enabled = {
				ROOT = {
					any_character = {
						is_character_slot = minister_of_culture
					}
				}
			}
			assigned_advisor_button_visible = {
				check_variable = {
					state_ministers > 0
				}
			}
		}
		properties = {
			assigned_advisor_button = {
				image = "[ROOT.GetCulturalAdvisor]"
			}
		}


	}

	pie_chart_sg = {
		context_type = selected_state_context
		window_name = "pie_container"
		parent_window_token = selected_state_view

		visible = {
			always = yes
		}

		dirty = FROM.pie_chart_dirty

		properties = {
			pie0 = { frame = pie_chart^0 }
			pie1 = { frame = pie_chart^1 }
			pie2 = { frame = pie_chart^2 }
			pie3 = { frame = pie_chart^3 }
			pie4 = { frame = pie_chart^4 }
			pie5 = { frame = pie_chart^5 }
			pie6 = { frame = pie_chart^6 }
			pie7 = { frame = pie_chart^7 }
			pie8 = { frame = pie_chart^8 }
			pie9 = { frame = pie_chart^9 }
			pie10 = { frame = pie_chart^10 }
			pie11 = { frame = pie_chart^11 }
			pie12 = { frame = pie_chart^12 }
			pie13 = { frame = pie_chart^13 }
			pie14 = { frame = pie_chart^14 }
			pie15 = { frame = pie_chart^15 }
			pie16 = { frame = pie_chart^16 }
			pie17 = { frame = pie_chart^17 }
			pie18 = { frame = pie_chart^18 }
			pie19 = { frame = pie_chart^19 }
			pie20 = { frame = pie_chart^20 }
			pie21 = { frame = pie_chart^21 }
			pie22 = { frame = pie_chart^22 }
			pie23 = { frame = pie_chart^23 }
			pie24 = { frame = pie_chart^24 }
			pie25 = { frame = pie_chart^25 }
			pie26 = { frame = pie_chart^26 }
			pie27 = { frame = pie_chart^27 }
			pie28 = { frame = pie_chart^28 }
			pie29 = { frame = pie_chart^29 }
			pie30 = { frame = pie_chart^30 }
			pie31 = { frame = pie_chart^31 }
			pie32 = { frame = pie_chart^32 }
			pie33 = { frame = pie_chart^33 }
			pie34 = { frame = pie_chart^34 }
			pie35 = { frame = pie_chart^35 }
			pie36 = { frame = pie_chart^36 }
			pie37 = { frame = pie_chart^37 }
			pie38 = { frame = pie_chart^38 }
			pie39 = { frame = pie_chart^39 }
			pie40 = { frame = pie_chart^40 }
			pie41 = { frame = pie_chart^41 }
			pie42 = { frame = pie_chart^42 }
			pie43 = { frame = pie_chart^43 }
			pie44 = { frame = pie_chart^44 }
			pie45 = { frame = pie_chart^45 }
			pie46 = { frame = pie_chart^46 }
			pie47 = { frame = pie_chart^47 }
			pie48 = { frame = pie_chart^48 }
			pie49 = { frame = pie_chart^49 }
			pie50 = { frame = pie_chart^50 }
			pie51 = { frame = pie_chart^51 }
			pie52 = { frame = pie_chart^52 }
			pie53 = { frame = pie_chart^53 }
			pie54 = { frame = pie_chart^54 }
			pie55 = { frame = pie_chart^55 }
			pie56 = { frame = pie_chart^56 }
			pie57 = { frame = pie_chart^57 }
			pie58 = { frame = pie_chart^58 }
			pie59 = { frame = pie_chart^59 }
			pie60 = { frame = pie_chart^60 }
			pie61 = { frame = pie_chart^61 }
			pie62 = { frame = pie_chart^62 }
			pie63 = { frame = pie_chart^63 }
			pie64 = { frame = pie_chart^64 }
			pie65 = { frame = pie_chart^65 }
			pie66 = { frame = pie_chart^66 }
			pie67 = { frame = pie_chart^67 }
			pie68 = { frame = pie_chart^68 }
			pie69 = { frame = pie_chart^69 }
			pie70 = { frame = pie_chart^70 }
			pie71 = { frame = pie_chart^71 }
			pie72 = { frame = pie_chart^72 }
			pie73 = { frame = pie_chart^73 }
			pie74 = { frame = pie_chart^74 }
			pie75 = { frame = pie_chart^75 }
			pie76 = { frame = pie_chart^76 }
			pie77 = { frame = pie_chart^77 }
			pie78 = { frame = pie_chart^78 }
			pie79 = { frame = pie_chart^79 }
			pie80 = { frame = pie_chart^80 }
			pie81 = { frame = pie_chart^81 }
			pie82 = { frame = pie_chart^82 }
			pie83 = { frame = pie_chart^83 }
			pie84 = { frame = pie_chart^84 }
			pie85 = { frame = pie_chart^85 }
			pie86 = { frame = pie_chart^86 }
			pie87 = { frame = pie_chart^87 }
			pie88 = { frame = pie_chart^88 }
			pie89 = { frame = pie_chart^89 }
			pie90 = { frame = pie_chart^90 }
			pie91 = { frame = pie_chart^91 }
			pie92 = { frame = pie_chart^92 }
			pie93 = { frame = pie_chart^93 }
			pie94 = { frame = pie_chart^94 }
			pie95 = { frame = pie_chart^95 }
			pie96 = { frame = pie_chart^96 }
			pie97 = { frame = pie_chart^97 }
			pie98 = { frame = pie_chart^98 }
			pie99 = { frame = pie_chart^99 }
		}

	}

}

