scripted_gui = {
	
	riseup_partisan = {
		context_type = selected_state_context
		
		window_name = "riseup_partisan_container"
		parent_window_token = selected_state_view
		
		visible = {
			is_owned_by = ROOT
			controller = { has_war_with = ROOT }
		}
		
		effects = {
			state_riseup_partisan_click = {
				controller = {
					set_temp_variable = { original_controller = THIS }
					country_event = { id = occupation_mechanic.3 days = 1 }
				}
				ROOT = {
					set_state_controller = PREV
					if = {
						limit = {
							NOT = { has_template = "Skirmisher Partisans" }
						}
						division_template = {
							name = "Skirmisher Partisans"
							regiments = {
								skirmishers = { x = 0 y = 0 }
								skirmishers = { x = 0 y = 1 }
							}
						}
						set_division_template_lock = { division_template = "Skirmisher Partisans" is_locked = yes }
					}
					if = {
						limit = {
							NOT = { has_template = "Partisans" }
						}
						division_template = {
							name = "Partisans"
							regiments = {
								swordsmen = { x = 0 y = 0 }
								spearmen = { x = 0 y = 1 }
							}
						}
						set_division_template_lock = { division_template = Partisans is_locked = yes }
					}
				}

				set_variable = { available_partisans = state_population_k }

				### resistance factor
				set_temp_variable = { resistance_factor = resistance }
				divide_temp_variable = { resistance_factor = 100 }
				add_to_temp_variable = { resistance_factor = 1 }
				multiply_variable = { available_partisans = resistance_factor }

				### compliance factor
				set_temp_variable = { compliance_factor = compliance }
				divide_temp_variable = { compliance_factor = 100 }
				add_to_temp_variable = { compliance_factor = 1 }
				divide_variable = { available_partisans = compliance_factor }

				### culture factor
				if = {
					limit = { ROOT = { has_government = fire_culture } }
					set_temp_variable = { culture_factor = fire_pop }
				}
				if = {
					limit = { ROOT = { has_government = earth_culture } }
					set_temp_variable = { culture_factor = earth_pop }
				}
				if = {
					limit = { ROOT = { has_government = water_culture } }
					set_temp_variable = { culture_factor = water_pop }
				}
				if = {
					limit = { ROOT = { has_government = air_culture } }
					set_temp_variable = { culture_factor = air_pop }
				}
				if = {
					limit = { ROOT = { has_government = pluralist_culture } }
					set_temp_variable = { culture_factor = nonbender_pop }
				}
				divide_temp_variable = { culture_factor = 100 }
				add_to_temp_variable = { culture_factor = 0.1 }
				multiply_variable = { available_partisans = culture_factor }
				round_variable = available_partisans

				add_dynamic_modifier = {
					modifier = recent_rebel_activity
					days = 280
				}

				create_partisan_units = yes
				var:original_controller = {
					set_state_controller = PREV
				}
			}
		}
		
		triggers = {
			state_riseup_partisan_click_enabled = {
				resistance > 49
				controller = {
					core_resistance = {
					    occupied_country_tag = ROOT
					    value > 50
					}
				}
				NOT = {
					has_dynamic_modifier = {
						modifier = recent_rebel_activity
					}
				}
			}
		}
		
		ai_test_scopes = test_enemy_controlled_states
		ai_test_interval = 170
		ai_test_variance = 0.5
		
		ai_enabled = {
			always = yes
		}
		
		ai_check = {
			any_core_state = {
				controller = {
					has_war_with = ROOT
				}
			}
		}
		
		ai_max_weight_taken_per_test = 10
		ai_weights = {
			state_riseup_partisan_click = {
				ai_will_do = {
					base = 10
					
					modifier = {
						factor = 2
						ROOT = {
							has_capitulated = yes
						}
					}
					modifier = {
						add = 50
						
						resistance > 60
					}
				}
			}
		}
		
	}


	state_occupy_state = {
		context_type = selected_state_context
		
		window_name = "occupy_state_container"
		parent_window_token = selected_state_view
		
		visible = {
			#is_controlled_by  = ROOT
			#NOT = {
			#	is_owned_by = ROOT
			#}

			always = no
		}
		
		effects = {
			occupy_state_click = {
				controller = {
					country_event = { id = occupation_mechanic.4 days = 1 }

					add_political_power = -mtth:THIS.core_state_cost
				}
				ROOT = {
					set_state_owner = PREV
				}
			}
		}
		
		triggers = {
			occupy_state_click_enabled = {
				ROOT = {
					has_political_power > mtth:THIS.core_state_cost
				}
				compliance > 59
				#controller = {
				#	core_compliance = {
				#		occupied_country_tag = FROM.FROM
				#		value > 59
				#	}
				#}
				is_fully_controlled_by = ROOT
				NOT = {
					is_owned_by = ROOT
					is_core_of = ROOT
				}
			}
		}
		
		ai_test_scopes = test_self_owned_states
		ai_test_scopes = test_enemy_owned_states
		ai_test_interval = 170
		ai_test_variance = 0.5
		
		ai_enabled = {
			always = yes
		}
        
		ai_check = {
			any_core_state = {
				controller = {
					has_war_with = ROOT
				}
			}
		}
		
		ai_max_weight_taken_per_test = 10
		ai_weights = {
			occupy_state_click = {
				ai_will_do = {
					base = 10
					
					modifier = {
						add = 50
						
						compliance > 60
					}
				}
			}
		}
		
	}

	state_core_state = {
		context_type = selected_state_context
		
		window_name = "core_state_container"
		parent_window_token = selected_state_view
		
		visible = {
			is_controlled_by = ROOT
			NOT = {
				has_resistance = no
			}
		}
		
		effects = {
			core_state_click = {
				set_temp_variable = { core_state_cost = mtth:core_state_cost }
				multiply_temp_variable = { core_state_cost = -1 }
				controller = {
					country_event = { id = occupation_mechanic.5 days = 1 }

					add_political_power = var:core_state_cost
				}
				THIS = {
					add_core_of = controller
				}
				if = { 
					limit = {
						THIS = {
							OR = {
								is_core_of = PEG
								is_core_of = PEE
								is_core_of = PEF
								is_core_of = PEA
								is_core_of = PEW
							}
						}
					}
					cancel_resistance = yes
					remove_core_of = PEG
					remove_core_of = PEE
					remove_core_of = PEF
					remove_core_of = PEA
					remove_core_of = PEW
				}
			}
		}
		
		triggers = {
			core_state_click_enabled = {
				ROOT = {
					has_political_power > mtth:THIS.core_state_cost
				}
				if = { limit = { has_government = fire_culture }
					check_variable = { fire_pop > 50 }
				}
				if = { limit = { has_government = earth_culture }
					check_variable = { earth_pop > 50 }
				}
				if = { limit = { has_government = water_culture }
					check_variable = { water_pop > 50 }
				}
				if = { limit = { has_government = air_culture }
					check_variable = { air_pop > 50 }
				}
				if = { limit = { has_government = pluralist_culture }
					check_variable = { nonbender_pop > 50 }
				}
				is_controlled_by = ROOT
				compliance > 99.99
			}
		}
		
		ai_test_scopes = test_self_owned_states
		ai_test_scopes = test_enemy_owned_states
		ai_test_interval = 1200    #50 days
		ai_test_variance = 0.5
		
		ai_enabled = {
			always = yes
		}
        
		ai_check = {
			any_core_state = {
				controller = {
					has_war_with = ROOT
				}
			}
		}
		
		ai_max_weight_taken_per_test = 10
		ai_weights = {
			core_state_click = {
				ai_will_do = {
					base = 10
					
					modifier = {
						add = 50
						
						compliance > 60
					}
				}
			}
		}
		
	}
	
}