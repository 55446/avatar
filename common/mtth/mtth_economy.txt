
local_resource_factor = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource_factor = 1 }
		add_to_temp_variable = { local_resource_factor = THIS.modifier@local_resources }
		
		add = local_resource_factor
	}
}

fuel_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = smithy_count }
		multiply_temp_variable = { modifier_1 = smithy_fuel }

		set_temp_variable = { modifier_2 = steelworks_count }
		multiply_temp_variable = { modifier_2 = steelworks_fuel }

		add_to_temp_variable = { modifier_1 = modifier_2 }

		set_temp_variable = { modifier_3 = factory_count }
		multiply_temp_variable = { modifier_3 = factory_fuel }

		add_to_temp_variable = { modifier_1 = modifier_3 }

		
		set_temp_variable = { modifier_4 = dockyard_count }
		multiply_temp_variable = { modifier_4 = dockyard_fuel }

		add_to_temp_variable = { modifier_1 = modifier_4 }

		set_temp_variable = { modifier_5 = steel_beam_factory_count }
		multiply_temp_variable = { modifier_5 = steel_beam_factory_fuel }

		add_to_temp_variable = { modifier_1 = modifier_5 }


		multiply_temp_variable = { modifier_1 = 0.02 }

		set_temp_variable = { fuel_factor = 1 }
		add_to_temp_variable = { fuel_factor = modifier@fuel_burning }

		multiply_temp_variable = { modifier_1 = fuel_factor }

		add = modifier_1
	}
}


crop_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = 0 }
		add_to_temp_variable = { modifier_1 = crop_weaving_count }
		multiply_temp_variable = { modifier_1 = crop_weaving_need }

		set_temp_variable = { modifier_2 = 0 }
		add_to_temp_variable = { modifier_2 = mill_count }
		multiply_temp_variable = { modifier_2 = mill_need }

		add_to_temp_variable = { modifier_1 = modifier_2 }

		add = modifier_1
	}
}
leather_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = 0 }
		add_to_temp_variable = { modifier_1 = animal_weaving_count }
		multiply_temp_variable = { modifier_1 = animal_weaving_need }

		add = modifier_1
	}
}
stone_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = 0 }
		add_to_temp_variable = { modifier_1 = steelworks_count }
		multiply_temp_variable = { modifier_1 = steelworks_need2 }

		set_temp_variable = { modifier_2 = 0 }
		add_to_temp_variable = { modifier_2 = masonry_count }
		multiply_temp_variable = { modifier_2 = masonry_need }

		set_temp_variable = { modifier_3 = 0 }
		add_to_temp_variable = { modifier_3 = luxury_good_factory_count }
		multiply_temp_variable = { modifier_3 = luxury_good_factory_need2 }

		add_to_temp_variable = { modifier_1 = modifier_2 }
		add_to_temp_variable = { modifier_1 = modifier_3 }

		add = modifier_1
	}
}
iron_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = 0 }
		add_to_temp_variable = { modifier_1 = steelworks_count }
		multiply_temp_variable = { modifier_1 = steelworks_need1 }

		set_temp_variable = { modifier_2 = 0 }
		add_to_temp_variable = { modifier_2 = luxury_good_factory_count }
		multiply_temp_variable = { modifier_2 = luxury_good_factory_need1 }

		add_to_temp_variable = { modifier_1 = modifier_2 }

		add = modifier_1
	}
}
wood_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = 0 }
		add_to_temp_variable = { modifier_1 = carpentry_count }
		multiply_temp_variable = { modifier_1 = carpentry_need }

		set_temp_variable = { modifier_2 = 0 }
		add_to_temp_variable = { modifier_2 = consumer_good_factory_count }
		multiply_temp_variable = { modifier_2 = consumer_good_factory_need1 }

		add_to_temp_variable = { modifier_1 = modifier_2 }

		add = modifier_1
	}
}
textile_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = 0 }
		add_to_temp_variable = { modifier_1 = consumer_good_factory_count }
		multiply_temp_variable = { modifier_1 = consumer_good_factory_need2 }

		add = modifier_1
	}
}
steel_cost = {
	base = 0
	modifier = {
		set_temp_variable = { modifier_1 = 0 }
		add_to_temp_variable = { modifier_1 = steel_beam_factory_count }
		multiply_temp_variable = { modifier_1 = steel_beam_factory_need }

		add = modifier_1
	}
}




farm_grain_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@farm }
		controller = {
			multiply_temp_variable = { local_resource = farm_output }
		}
		multiply_temp_variable = { local_resource = field }
		set_temp_variable = { harvest = 1 }
		add_to_temp_variable = { harvest = modifier@harvesting_factor }
		add_to_temp_variable = { harvest = controller:modifier@harvesting_factor }
		multiply_temp_variable = { local_resource = harvest }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

farm_food_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@farm }
		controller = {
			multiply_temp_variable = { local_resource = farm_output_2 }
		}
		multiply_temp_variable = { local_resource = field }
		set_temp_variable = { harvest = 1 }
		add_to_temp_variable = { harvest = modifier@harvesting_factor }
		add_to_temp_variable = { harvest = controller:modifier@harvesting_factor }
		multiply_temp_variable = { local_resource = harvest }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

ranch_leather_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@ranch }
		controller = {
			multiply_temp_variable = { local_resource = ranch_output }
		}
		multiply_temp_variable = { local_resource = animal }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

fishing_stand_food_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@fishing_stand }
		controller = {
			multiply_temp_variable = { local_resource = fishing_stand_output }
		}
		multiply_temp_variable = { local_resource = water }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

lumber_mill_wood_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@lumber_mill }
		controller = {
			multiply_temp_variable = { local_resource = lumber_mill_output }
		}
		multiply_temp_variable = { local_resource = forest }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

quarry_stone_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@quarry }
		controller = {
			multiply_temp_variable = { local_resource = quarry_output }
		}
		multiply_temp_variable = { local_resource = stonefield }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

crop_weaving_textile_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@crop_weaving }
		controller = {
			multiply_temp_variable = { local_resource = crop_weaving_output }
			if = {
				limit = {
					check_variable = { resource@oil < 0 }
				}	
				set_temp_variable = { crop_weaving_consumed = crop_weaving_count }
				multiply_temp_variable = { crop_weaving_consumed = crop_weaving_need }
				set_temp_variable = { resource_lack_penalty = resource@oil }
				if = {
					limit = {
						NOT = {
							check_variable = { crop_weaving_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = crop_weaving_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }
				multiply_temp_variable = { local_resource = resource_lack_penalty }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

animal_weaving_textile_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@animal_weaving }
		controller = {
			multiply_temp_variable = { local_resource = animal_weaving_output }
			if = {
				limit = {
					check_variable = { resource@chromium < 0 }
				}	
				set_temp_variable = { crop_weaving_consumed = animal_weaving_count }
				multiply_temp_variable = { crop_weaving_consumed = animal_weaving_need }
				set_temp_variable = { resource_lack_penalty = resource@chromium }
				if = {
					limit = {
						NOT = {
							check_variable = { animal_weaving_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = animal_weaving_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }
				multiply_temp_variable = { local_resource = resource_lack_penalty }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

mine_iron_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@mine }
		controller = {
			multiply_temp_variable = { local_resource = mine_output1 }
		}
		multiply_temp_variable = { local_resource = mountain }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

mine_coal_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@mine }
		controller = {
			multiply_temp_variable = { local_resource = mine_output2 }
		}
		multiply_temp_variable = { local_resource = mountain }
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

mill_food_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@mill }
		controller = {
			multiply_temp_variable = { local_resource = mill_output }
			if = {
				limit = {
					check_variable = { resource@oil < 0 }
				}	
				set_temp_variable = { mill_consumed = mill_count }
				multiply_temp_variable = { mill_consumed = mill_need }
				set_temp_variable = { resource_lack_penalty = resource@oil }
				if = {
					limit = {
						NOT = {
							check_variable = { mill_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = mill_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }
				multiply_temp_variable = { local_resource = resource_lack_penalty }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

steelworks_steel_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@steelworks }
		controller = {
			multiply_temp_variable = { local_resource = steelworks_output }
			if = {
				limit = {
					check_variable = { resource@iron < 0 }
				}	
				set_temp_variable = { steelworks_consumed = steelworks_count }
				multiply_temp_variable = { steelworks_consumed = steelworks_need1 }
				set_temp_variable = { resource_lack_penalty = resource@iron }
				if = {
					limit = {
						NOT = {
							check_variable = { steelworks_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = steelworks_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }

				multiply_temp_variable = { local_resource = resource_lack_penalty }
				clamp_temp_variable = { 
					var = local_resource
					min = 0 
				}
			}

			if = {
				limit = {
					check_variable = { resource@stone < 0 }
				}
				set_temp_variable = { steelworks_consumed_2 = steelworks_count }
				multiply_temp_variable = { steelworks_consumed_2 = steelworks_need2 }
				set_temp_variable = { resource_lack_penalty_2 = resource@stone }
				if = {
					limit = {
						NOT = {
							check_variable = { steelworks_consumed_2 = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty_2 = steelworks_consumed_2 }
				}
				add_to_temp_variable = { resource_lack_penalty_2 = 1 }

				multiply_temp_variable = { local_resource = resource_lack_penalty_2 }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

shop_consumer_goods_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@consumer_good_factory }
		controller = {
			multiply_temp_variable = { local_resource = consumer_good_factory_output }
			if = {
				limit = {
					check_variable = { resource@aluminium < 0 }
				}	
				set_temp_variable = { shop_consumed = consumer_good_factory_count }
				multiply_temp_variable = { shop_consumed = consumer_good_factory_need1 }
				set_temp_variable = { resource_lack_penalty = resource@aluminium }
				if = {
					limit = {
						NOT = {
							check_variable = { shop_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = shop_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }

				multiply_temp_variable = { local_resource = resource_lack_penalty }
				clamp_temp_variable = { 
					var = local_resource
					min = 0 
				}
			}

			if = {
				limit = {
					check_variable = { resource@tungsten < 0 }
				}
				set_temp_variable = { shop_consumed_2 = consumer_good_factory_count }
				multiply_temp_variable = { shop_consumed_2 = consumer_good_factory_need2 }
				set_temp_variable = { resource_lack_penalty_2 = resource@tungsten }
				if = {
					limit = {
						NOT = {
							check_variable = { shop_consumed_2 = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty_2 = shop_consumed_2 }
				}
				add_to_temp_variable = { resource_lack_penalty_2 = 1 }

				multiply_temp_variable = { local_resource = resource_lack_penalty_2 }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

luxury_store_luxury_goods_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@luxury_good_factory }
		controller = {
			multiply_temp_variable = { local_resource = luxury_good_factory_output }
			if = {
				limit = {
					check_variable = { resource@iron < 0 }
				}	
				set_temp_variable = { store_consumed = luxury_good_factory_count }
				multiply_temp_variable = { store_consumed = luxury_good_factory_need2 }
				set_temp_variable = { resource_lack_penalty = resource@iron }
				if = {
					limit = {
						NOT = {
							check_variable = { store_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = store_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }

				multiply_temp_variable = { local_resource = resource_lack_penalty }
				clamp_temp_variable = { 
					var = local_resource
					min = 0 
				}
			}

			if = {
				limit = {
					check_variable = { resource@stone < 0 }
				}
				set_temp_variable = { store_consumed_2 = luxury_good_factory_count }
				multiply_temp_variable = { store_consumed_2 = luxury_good_factory_need1 }
				set_temp_variable = { resource_lack_penalty_2 = resource@stone }
				if = {
					limit = {
						NOT = {
							check_variable = { store_consumed_2 = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty_2 = store_consumed_2 }
				}
				add_to_temp_variable = { resource_lack_penalty_2 = 1 }

				multiply_temp_variable = { local_resource = resource_lack_penalty_2 }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

carpentry_plank_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@carpentry }
		controller = {
			multiply_temp_variable = { local_resource = carpentry_output }
			if = {
				limit = {
					check_variable = { resource@aluminium < 0 }
				}	
				set_temp_variable = { carpentry_consumed = carpentry_count }
				multiply_temp_variable = { carpentry_consumed = carpentry_need }
				set_temp_variable = { resource_lack_penalty = resource@aluminium }
				if = {
					limit = {
						NOT = {
							check_variable = { carpentry_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = carpentry_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }
				multiply_temp_variable = { local_resource = resource_lack_penalty }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

masonry_brick_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@masonry }
		controller = {
			multiply_temp_variable = { local_resource = masonry_output }
			if = {
				limit = {
					check_variable = { resource@stone < 0 }
				}	
				set_temp_variable = { masonry_consumed = masonry_count }
				multiply_temp_variable = { masonry_consumed = masonry_need }
				set_temp_variable = { resource_lack_penalty = resource@stone }
				if = {
					limit = {
						NOT = {
							check_variable = { masonry_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = masonry_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }
				multiply_temp_variable = { local_resource = resource_lack_penalty }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}

steel_beam_factory_steel_beam_gain = {
	base = 0
	modifier = {
		set_temp_variable = { local_resource = 0 }
		add_to_temp_variable = { local_resource = building_level@steel_beam_factory }
		controller = {
			multiply_temp_variable = { local_resource = steel_beam_factory_output }
			if = {
				limit = {
					check_variable = { resource@steel < 0 }
				}	
				set_temp_variable = { steel_beam_factory_consumed = steel_beam_factory_count }
				multiply_temp_variable = { steel_beam_factory_consumed = steel_beam_factory_need }
				set_temp_variable = { resource_lack_penalty = resource@steel }
				if = {
					limit = {
						NOT = {
							check_variable = { steel_beam_factory_consumed = 0 }
						}
					}
					divide_temp_variable = { resource_lack_penalty = steel_beam_factory_consumed }
				}
				add_to_temp_variable = { resource_lack_penalty = 1 }
				multiply_temp_variable = { local_resource = resource_lack_penalty }
			}
		}
		clamp_temp_variable = {
			var = local_resource
			min = 0
		}
		multiply_temp_variable = { local_resource = mtth:local_resource_factor }

		add = local_resource
	}
}