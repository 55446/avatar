# leader_traits contain a list of UnitLeaderTrait with the following structure:
# trait_key = {
# 	type = all # or either of field_marshal, corps_commander, navy
#	trait_type = basic_trait # or either of status_trait, personality_trait, assignable_trait, basic_terrain_trait, assignable_terrain_trait, exile
#	attack_skill = 0 # integer
#	defense_skill = 0 # integer
#	logistics_skill = 0 # integer
#	planning_skill = 0 # integer
#	maneuvering_skill = 0 # integer
#	coordination_skill = 0 # integer
#	attack_skill_factor = 0.0 # decimal
#	defense_skill_factor = 0.0 # decimal
#	logistics_skill_factor = 0.0 # decimal
#	planning_skill_factor = 0.0 # decimal
#	maneuvering_skill_factor = 0.0 # decimal
#	coordination_skill_factor = 0.0 # decimal
#	show_in_combat = yes # boolean
#	override_effect_tooltip = "" # loc key
#	custom_effect_tooltip = "" # loc key
#	custom_prerequisite_tooltip = "" # loc key
#	custom_gain_xp_trigger_tooltip = "" # loc key
#	mutually_exclusive = other_trait # trait key
#	parent = { # Can be added multiple times
#	    traits = {XXX YYY ZZZ}  # A list of other traits that
#       num_parents_needed = 1 # The number of the above traits that must be true
#   }
#   any_parent = { XXX YYY ZZZ } # shorthand for parent when num_parents_needed are defaulted to 1
#   all_parents = { XXX YYY ZZZ } # shorthand for parent when num_parents_needed are the same as the number of parents
#	gui_row = 0 # integer, starts at 0, unset or -1 means the trait does not appear in unlockable trait tree.
#	gui_column = 0 # integer, starts at 0, unset or -1 means auto
#	allowed = trigger # scope is a unit leader
#	prerequisites = trigger # scope is an unit leader
#	gain_xp = trigger # scope is a combatant
#	gain_xp_leader = trigger # scope is a unit leader. ROOT is country you are from and FROM is any target nationality for agents
#	gain_xp_on_spotting = 0 # integer
#	modifier = { } # list of modifiers
#	non_shared_modifier = {} #
#	corps_commander_modifier = {} #
#	field_marshal_modifier = {} #
#	sub_unit_modifiers = { # list of sub unit def
#		# e.g.
#		submarine {
#			units = {} # list of adjusters
#			# list of modifiers e.g.
#			naval_visibility = -0.1
#		}
#	}
#	trait_xp_factor = {} # list of trait_key/decimal
#	on_add = effect # scope is an unit leader
#	on_remove = effect # scope is an unit leader
#	daily_effect = effect # scope is an unit leader
#	cost = 1000 # integer
#	ai_will_do = {} # weight
#	new_commander_weight = {} # weight
#	enable_ability = ability_key
#}

leader_traits = {
	
##################################
# Field Marshal traits.
##################################

	skilled_staffer = { 
		type = corps_commander
		gain_xp = {
			check_variable = { num_units > 9 }
		}
		custom_gain_xp_trigger_tooltip = fighting_with_at_least_10_units
		
		cost = 1000
		
		corps_commander_modifier = {
			max_commander_army_size = 10
		}
		non_shared_modifier = {
			experience_gain_factor = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
		logistics_skill_factor = 2
		
		gui_row = 0
	}

	expert_staffer = { 
		type = corps_commander
		gain_xp = {
			check_variable = { num_units > 19 }
		}
		custom_gain_xp_trigger_tooltip = fighting_with_at_least_20_units
		
		cost = 3000
		
		corps_commander_modifier = {
			max_commander_army_size = 20
		}
		non_shared_modifier = {
			experience_gain_factor = 0.15
		}
		
		ai_will_do = {
			factor = 1
		}
		logistics_skill_factor = 2
		trait_type = assignable_trait
		all_parents = { skilled_staffer }
		gui_row = 0
	}
	
	experienced_general = { 
		type = field_marshal
		gain_xp = {
			check_variable = { num_units > 34 }
		}

		custom_gain_xp_trigger_tooltip = fighting_with_at_least_35_units
		cost = 6000
		
		field_marshal_modifier = {
			max_army_group_size = 3
		}
		modifier = {
			experience_gain_factor = 0.25
		}
		enable_ability = extra_suplies

		corps_commander_modifier = {
			max_commander_army_size = 30
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = assignable_trait
		all_parents = { expert_staffer }
		gui_row = 0

		slot = war_minister
		specialist_advisor_trait = experienced_strategist_1
		expert_advisor_trait = experienced_strategist_2
		genius_advisor_trait = experienced_strategist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 200
							traits = { experienced_strategist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 100
							traits = { experienced_strategist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 50
							traits = { experienced_strategist_1 }
						}
					}
				}
			}
		}
	}

##################################
# Corps Commander traits.
##################################

	offensive_infantry = { 
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_infantry > temp }
			check_variable = { num_units_offensive_combats > temp }
		}
		custom_gain_xp_trigger_tooltip = offensive_infantry_ratio_over_80
		
		cost = 1000
		modifier = {
			org_loss_when_moving = -0.30
		}
		
		ai_will_do = {
			factor = 1
		}

		mutually_exclusive = defensive_infantry
		gui_row = 2

		slot = field_marshal
		specialist_advisor_trait = offensive_strategist_1
		expert_advisor_trait = offensive_strategist_2
		genius_advisor_trait = offensive_strategist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 200
							traits = { offensive_strategist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 100
							traits = { offensive_strategist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 50
							traits = { offensive_strategist_1 }
						}
					}
				}
			}
		}
	}

	defensive_infantry = { 
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_infantry > temp }
			check_variable = { num_units_defensive_combats > temp }
		}
		custom_gain_xp_trigger_tooltip = defensive_infantry_ratio_over_80
		
		cost = 1000
		modifier = {
			army_infantry_defence_factor = 0.05
		}
		enable_ability = defensive_measures
		
		ai_will_do = {
			factor = 1
		}

		mutually_exclusive = offensive_infantry
		gui_row = 3

		slot = field_marshal
		specialist_advisor_trait = defensive_strategist_1
		expert_advisor_trait = defensive_strategist_2
		genius_advisor_trait = defensive_strategist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 200
							traits = { defensive_strategist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 100
							traits = { defensive_strategist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 50
							traits = { defensive_strategist_1 }
						}
					}
				}
			}
		}
	}

	tactical_mind = { 
		type = corps_commander
		gain_xp = {
			min_planning > 0.5
		}
		custom_gain_xp_trigger_tooltip = is_using_battle_plans

		cost = 1000
		modifier = {
			planning_speed = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}

		gui_row = 6
	}

	trait_engineer = { 
		type = corps_commander
		gain_xp = {
			OR = {
				has_combat_modifier = river_crossing
				is_amphibious_invasion = yes
			}
		}
		cost = 600
		modifier = {
			equipment_capture = 0.05
		}
		
		ai_will_do = {
			factor = 1
		}
		
		mutually_exclusive = supply_organisation
		gui_row = 8

		slot = head_of_weaponry
		specialist_advisor_trait = smithing_guildmaster_1
		expert_advisor_trait = smithing_guildmaster_2
		genius_advisor_trait = smithing_guildmaster_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 200
							traits = { smithing_guildmaster_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 100
							traits = { smithing_guildmaster_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 50
							traits = { smithing_guildmaster_1 }
						}
					}
				}
			}
		}
	}

	supply_organisation = { 
		type = corps_commander
		
		gain_xp = {
			frontage_full = yes
		}
		cost = 600
		
		modifier = {
			supply_consumption_factor = -0.1
		}

		ai_will_do = {
			factor = 1
		}

		mutually_exclusive = trait_engineer
		gui_row = 9
	}

	naval_invader = {
		type = corps_commander
		gain_xp = {
			is_amphibious_invasion = yes
		}
		cost = 600

		corps_commander_modifier = {
			max_commander_army_size = -4
			amphibious_invasion = 0.3 # 30% faster invasions
			invasion_preparation = -0.3
		}
		
		ai_will_do = {
			factor = 1
		}

		gui_row = 10
	}

	besieger = {
		type = corps_commander
		gain_xp = {
			OR = {
				has_combat_modifier = fort_attack
				dig_in > 10
			}
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			fort = {
				attack = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		
		gui_row = 11
	}

	
	
##################################
# Corps Commander assignable traits.
##################################

	powerful_attack = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000

		corps_commander_modifier = {
			max_commander_army_size = -6
		}
		modifier = {
			army_infantry_attack_factor = 0.05
		}
		
		attack_skill = 2
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { offensive_infantry }
		trait_type = assignable_trait
		mutually_exclusive = sneak_attack
		gui_row = 1

	}

	sneak_attack = { 
		type = corps_commander
		gain_xp = {
			OR = {
				has_flanked_opponent = yes
				opponent = { has_flanked_opponent = yes }
			}
		}
		custom_gain_xp_trigger_tooltip = has_flanked
		
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			recon_factor = 0.25
		}
		enable_ability = probing_attack

		ai_will_do = {
			factor = 1
		}

		all_parents = { offensive_infantry }
		trait_type = assignable_trait
		mutually_exclusive = powerful_attack
		gui_row = 2

		slot = field_marshal
		specialist_advisor_trait = assymetrical_strategist_1
		expert_advisor_trait = assymetrical_strategist_2
		genius_advisor_trait = assymetrical_strategist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 200
							traits = { assymetrical_strategist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 100
							traits = { assymetrical_strategist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 50
							traits = { assymetrical_strategist_1 }
						}
					}
				}
			}
		}
	}

	entrenchment = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -6
		}
		modifier = {
			dig_in_speed_factor = 0.25
			max_dig_in_factor = 0.25
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { defensive_infantry }
		trait_type = assignable_trait
		mutually_exclusive = last_stand
		
		gui_row = 3
	}

	last_stand = { 
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_infantry > temp }
		}
		custom_gain_xp_trigger_tooltip = infantry_ratio_over_80
		
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			army_infantry_defence_factor = 0.10
		}
		
		ai_will_do = {
			factor = 1
		}
		
		all_parents = { defensive_infantry }
		trait_type = assignable_trait
		mutually_exclusive = entrenchment
		
		gui_row = 4
	}

	battlefield_observer = { 
		type =  corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			recon_factor = 0.5
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 5
		all_parents = { tactical_mind }
		trait_type = assignable_trait

		slot = head_of_intelligence
		specialist_advisor_trait = skilled_scout_1
		expert_advisor_trait = skilled_scout_2
		genius_advisor_trait = skilled_scout_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_intelligence
							cost = 200
							traits = { skilled_scout_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_intelligence
							cost = 100
							traits = { skilled_scout_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_intelligence
							cost = 50
							traits = { skilled_scout_1 }
						}
					}
				}
			}
		}
	}

	thorough_planner = { 
		type =  corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			max_planning = 0.2
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 6
		mutually_exclusive = fast_planner

		all_parents = { tactical_mind }
		trait_type = assignable_trait
	}

	fast_planner = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			planning_speed = 0.25
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 7
		mutually_exclusive = thorough_planner

		all_parents = { tactical_mind }
		trait_type = assignable_trait
	}

	bridge_builder = { 
		type = corps_commander
		gain_xp = {
			always = no
		}
		cost = 1000
		modifier = {
			river = {
				attack = 0.1
			}
		}
		corps_commander_modifier = {
			max_commander_army_size = -2
		}

		enable_ability = makeshift_bridges

		ai_will_do = {
			factor = 1
		}
		all_parents = { trait_engineer }
		trait_type = assignable_trait
		gui_row = 8

		slot = field_marshal
		specialist_advisor_trait = transportation_expert_1
		expert_advisor_trait = transportation_expert_2
		genius_advisor_trait = transportation_expert_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 200
							traits = { transportation_expert_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 100
							traits = { transportation_expert_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = field_marshal
							cost = 50
							traits = { transportation_expert_1 }
						}
					}
				}
			}
		}
	}

	endurance_general = { 
 		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			out_of_supply_factor = -0.25
			#army_org_factor = 0.15
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { supply_organisation }
		trait_type = assignable_trait
		gui_row = 9

		slot = quartermaster
		specialist_advisor_trait = forager_1
		expert_advisor_trait = forager_2
		genius_advisor_trait = forager_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 200
							traits = { forager_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 100
							traits = { forager_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 50
							traits = { forager_1 }
						}
					}
				}
			}
		}
	}

	naval_liason = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			shore_bombardment_bonus = 0.25
		}

		enable_ability = faster_naval_invasion_planning

		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_trait
		all_parents = { naval_invader }
		
		gui_row = 10

		slot = war_minister
		specialist_advisor_trait = amphibious_specialist_1
		expert_advisor_trait = amphibious_specialist_2
		genius_advisor_trait = amphibious_specialist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 200
							traits = { amphibious_specialist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 100
							traits = { amphibious_specialist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 50
							traits = { amphibious_specialist_1 }
						}
					}
				}
			}
		}
	}

	siege_expert = {
		type = corps_commander
		gain_xp = {
			always = no
		}
		cost = 1000
		modifier = {

		}
		enable_ability = siege_artillery

		corps_commander_modifier = {
			max_commander_army_size = -6
		}
		
		ai_will_do = {
			factor = 1
		}
		
		gui_row = 11
		
		trait_type = assignable_trait
		all_parents = { besieger }
	}


##################################
# Field Marshal traits.
##################################

	aggressive_assaulter = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			breakthrough_factor = 0.10
		}
		custom_effect_tooltip = INCREASED_ASSAULT_AND_SHOCK_CHANCE
		ai_will_do = {
			factor = 1
		}
		gui_row = 1
		any_parent = { powerful_attack sneak_attack }
		trait_type = assignable_trait

		slot = war_minister
		specialist_advisor_trait = aggressive_strategist_1
		expert_advisor_trait = aggressive_strategist_2
		genius_advisor_trait = aggressive_strategist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 200
							traits = { aggressive_strategist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 100
							traits = { aggressive_strategist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 50
							traits = { aggressive_strategist_1 }
						}
					}
				}
			}
		}
	}

	resolute_defender = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			army_defence_factor = 0.10
		}
		custom_effect_tooltip = INCREASED_ASSAULT_AND_SHOCK_CHANCE
		ai_will_do = {
			factor = 1
		}
		gui_row = 4
		any_parent = { last_stand entrenchment}

		trait_type = assignable_trait

		slot = war_minister
		specialist_advisor_trait = unyielding_defender_1
		expert_advisor_trait = unyielding_defender_2
		genius_advisor_trait = unyielding_defender_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 200
							traits = { unyielding_defender_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 100
							traits = { unyielding_defender_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 50
							traits = { unyielding_defender_1 }
						}
					}
				}
			}
		}
	}

	strategical_genius = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000

		field_marshal_modifier = {
			max_army_group_size = 1
		}
		enable_ability = staff_office_plan
		
		ai_will_do = {
			factor = 1
		}

		gui_row = 6
		any_parent = { battlefield_observer thorough_planner fast_planner }

		slot = war_minister
		specialist_advisor_trait = flexible_strategist_1
		expert_advisor_trait = flexible_strategist_2
		genius_advisor_trait = flexible_strategist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 200
							traits = { flexible_strategist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 100
							traits = { flexible_strategist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = war_minister
							cost = 50
							traits = { flexible_strategist_1 }
						}
					}
				}
			}
		}
	}

	rivercrossing_expert = { 
		type = field_marshal
		gain_xp = {
			OR = {
				has_combat_modifier = river_crossing
			}
		}
		cost = 800
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			river = {
				attack = 0.15
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { bridge_builder }
		trait_type = assignable_trait
		gui_row = 8
	}

	organizer = { 
		type = field_marshal
		gain_xp = {
			check_variable = { num_battle_plans > 0 }
		}
		custom_gain_xp_trigger_tooltip = is_using_battle_plans
		
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			no_supply_grace = 730
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { endurance_general }
		trait_type = assignable_trait
		gui_row = 9

		slot = quartermaster
		specialist_advisor_trait = logistician_1
		expert_advisor_trait = logistician_2
		genius_advisor_trait = logistician_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 200
							traits = { logistician_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 100
							traits = { logistician_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 50
							traits = { logistician_1 }
						}
					}
				}
			}
		}
	}

###################################
# terrain traits.
##################################

	winter_specialist = { 
		type = corps_commander
		gain_xp = {
			OR = {
				temperature < -10
				is_fighting_in_terrain = ice_desert
			}
		}
		cost = 500
		modifier = {
			winter_attrition_factor = -0.5
			ice_desert = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		enable_ability = requisition_winter_gear
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = basic_terrain_trait
		gui_row = 7
	}

	winter_expert = { 
		type = corps_commander

		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			acclimatization_cold_climate_gain_factor = 0.40
			ice_desert = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		
		all_parents = { winter_specialist }

		trait_type = assignable_terrain_trait
		gui_row = 7

		slot = quartermaster
		specialist_advisor_trait = winter_specialist_1
		expert_advisor_trait = winter_specialist_2
		genius_advisor_trait = winter_specialist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 200
							traits = { winter_specialist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 100
							traits = { winter_specialist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 50
							traits = { winter_specialist_1 }
						}
					}
				}
			}
		}
	}

	desert_fox = { 
 		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = desert
				is_fighting_in_terrain = wasteland
				is_fighting_in_terrain = beach
			}
		}
		cost = 700
		modifier = {
			heat_attrition_factor = -0.5
			desert = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			wasteland = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			beach = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 0
	}

	desert_expert = { 
 		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			acclimatization_hot_climate_gain_factor = 0.40
			desert = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			wasteland = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			beach = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { desert_fox }

		trait_type = assignable_terrain_trait
		gui_row = 0

		slot = quartermaster
		specialist_advisor_trait = desert_specialist_1
		expert_advisor_trait = desert_specialist_2
		genius_advisor_trait = desert_specialist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 200
							traits = { desert_specialist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 100
							traits = { desert_specialist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 50
							traits = { desert_specialist_1 }
						}
					}
				}
			}
		}
	}

	swamp_fox = { 
		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = marsh
				is_fighting_in_terrain = swamp
			}
		}
		cost = 700
		modifier = {
			marsh = {
				movement = 0.1
				attack = 0.05
				defence = 0.05
			}
			swamp = {
				movement = 0.1
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 1
	}

	swamp_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			marsh = {
				movement = 0.1
				attack = 0.1
				defence = 0.1
			}
			swamp = {
				movement = 0.1
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { swamp_fox }

		trait_type = assignable_terrain_trait
		gui_row = 1
	}

	trait_mountaineer = { 
		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = mountain
				is_fighting_in_terrain = high_mountain
			}
		}
		cost = 700
		modifier = {
			mountain = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			high_mountain = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 3
	}

	trait_mountaineer_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			mountain = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			high_mountain = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { trait_mountaineer }

		trait_type = assignable_terrain_trait
		gui_row = 3
	}

	hill_fighter = { 
		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = hills
				is_fighting_in_terrain = cliff
				is_fighting_in_terrain = canyon
			}
		}
		cost = 700
		modifier = {
			hills = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			cliff = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			canyon = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 2
	}

	hill_fighter_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			hills = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			cliff = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			canyon = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { hill_fighter }

		trait_type = assignable_terrain_trait
		gui_row = 2
	}

	jungle_rat = { 
		type = corps_commander
		gain_xp = {
			is_fighting_in_terrain = jungle
		}
		cost = 700
		modifier = {
			jungle = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 6
	}

	jungle_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			jungle = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { jungle_rat }

		trait_type = assignable_terrain_trait
		gui_row = 6

		slot = quartermaster
		specialist_advisor_trait = jungle_specialist_1
		expert_advisor_trait = jungle_specialist_2
		genius_advisor_trait = jungle_specialist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 200
							traits = { jungle_specialist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 100
							traits = { jungle_specialist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = quartermaster
							cost = 50
							traits = { jungle_specialist_1 }
						}
					}
				}
			}
		}
	}

	ranger = { 
		type = corps_commander
		gain_xp = {
			is_fighting_in_terrain = forest
		}
		cost = 700
		modifier = {
			forest = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 5
	}

	ranger_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			forest = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { ranger }

		trait_type = assignable_terrain_trait
		gui_row = 5
	}

	urban_assault_specialist = { 
		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = urban
				is_fighting_in_terrain = village
			}
		}
		cost = 500
		modifier = {
			urban = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			village = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 4
	}

	urban_assault_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			urban = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			village = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		all_parents = { urban_assault_specialist }

		trait_type = assignable_terrain_trait
		gui_row = 4
	}

	adaptable = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			terrain_penalty_reduction = 0.50
		}
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_terrain_trait
		gui_row = 8
				

		parent = {
			traits = { desert_fox swamp_fox trait_mountaineer hill_fighter jungle_rat ranger urban_assault_specialist winter_specialist }
			num_parents_needed = 2
		}
	}

##################################
# Naval traits.
##################################
	
	fleet_admiral = { 
		type = navy
		gain_xp = {
			capital_ship > 0.0 # at least 1 capital ship
		}
		cost = 500
		modifier = {
			navy_capital_ship_defence_factor = 0.1
			navy_capital_ship_attack_factor = 0.05
		}
		custom_gain_xp_trigger_tooltip = FLEET_ADMIRAL_TRIGGER_TT
		ai_will_do = {
			factor = 1
		}
		mutually_exclusive = raiding_admiral
		gui_row = 3
		gui_column = 0
	}

	raiding_admiral = { 
		type = navy
		gain_xp = {
			screen_ship > 0.5
			#ROOT = {
			#	has_navy_size = {
			#		size > 10
			#		type = screen_ship
			#	}
			#}
		}
		cost = 500
		modifier = {
			naval_speed_factor = 0.1
			naval_retreat_chance = 0.1
			naval_retreat_speed = 0.25
		}
		custom_gain_xp_trigger_tooltip = RAIDING_ADMIRAL_TRIGGER_TT
		ai_will_do = {
			factor = 1
		}
		mutually_exclusive = fleet_admiral
		gui_row = 4
		gui_column = 0
	}

	naval_strategist = { 
		type = navy
		gain_xp = {
			is_winning = yes
		}
		cost = 500
		modifier = {
			positioning = 0.25
		}
		custom_gain_xp_trigger_tooltip = NAVAL_STRATEGIST_TRIGGER_TT
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 9
		gui_column = 0
	}

	trait_spotter = { 
		type = navy
		gain_xp = { # This trigger is not needed as it gets xp from spotting (not by combat)
			always = no 
		}
		gain_xp_on_spotting = 10
		cost = 500
		modifier = {
			spotting_chance = 0.1
		}
		custom_gain_xp_trigger_tooltip = SPOTTER_TRIGGER_TT
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 12
		gui_column = 0
	}
	

##################################
# naval assignable traits
##################################

	artillery_expert = { 
		type = navy
		modifier = {
			navy_capital_ship_attack_factor = 0.15
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { fleet_admiral }
		gui_row = 1
		gui_column = 1
	}
	invasion_supporter = { 
		type = navy
		modifier = {
			shore_bombardment_bonus = 0.25
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { artillery_expert }
		gui_row = 0
		gui_column = 2
	}
	fire_coordinator = { 
		type = navy
		modifier = {
			naval_critical_score_chance_factor = 0.1
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { artillery_expert }

		mutually_exclusive = trait_grand_admiral
		mutually_exclusive = poser

		gui_row = 1
		gui_column = 2
	}

	boarding_master = { 
		type = navy
		modifier = {
			naval_critical_effect_factor = -0.1
			naval_torpedo_hit_chance_factor = 0.3
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { fleet_admiral }
		gui_row = 2
		gui_column = 1
	}
	trait_grand_admiral = { 
		type = navy
		modifier = {
			naval_critical_effect_factor = -0.1
			ships_at_battle_start = 0.3
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = {
			traits = { screening_specialist boarding_master artillery_expert }
			num_parents_needed = 2
		}

		mutually_exclusive = fire_coordinator
		mutually_exclusive = poser

		gui_row = 2
		gui_column = 2

		slot = grand_admiral
		specialist_advisor_trait = naval_reformer_1
		expert_advisor_trait = naval_reformer_2
		genius_advisor_trait = naval_reformer_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 200
							traits = { naval_reformer_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 100
							traits = { naval_reformer_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 50
							traits = { naval_reformer_1 }
						}
					}
				}
			}
		}
	}

	screening_specialist = { 
		type = navy
		modifier = {
			screening_efficiency = 0.25
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { fleet_admiral }
		gui_row = 3
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = cautious_admiral_1
		expert_advisor_trait = cautious_admiral_2
		genius_advisor_trait = cautious_admiral_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 200
							traits = { cautious_admiral_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 100
							traits = { cautious_admiral_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 50
							traits = { cautious_admiral_1 }
						}
					}
				}
			}
		}
	}
	poser = { 
		type = navy
		modifier = {
			naval_has_potf_in_combat_attack = 0.2
			naval_has_potf_in_combat_defense = 0.1
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { screening_specialist }

		mutually_exclusive = trait_grand_admiral
		mutually_exclusive = fire_coordinator

		gui_row = 3
		gui_column = 2

		slot = head_of_weaponry
		specialist_advisor_trait = shipwright_industrialist_1
		expert_advisor_trait = shipwright_industrialist_2
		genius_advisor_trait = shipwright_industrialist_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 200
							traits = { shipwright_industrialist_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 100
							traits = { shipwright_industrialist_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 50
							traits = { shipwright_industrialist_1 }
						}
					}
				}
			}
		}
	}


	sailor_by_heart = { 
		type = navy
		modifier = {
			
		}
		sub_unit_modifiers = {
			watertribe_raft = {
				naval_speed_factor = 0.2
			}
			watertribe_cutter_ship = {
				naval_speed_factor = 0.2
			}
			watertribe_cutter_flagship = {
				naval_speed_factor = 0.2
			}
			galley = {
				naval_speed_factor = 0.2
			}
			barque = {
				naval_speed_factor = 0.2
			}
			junk = {
				naval_speed_factor = 0.2
			}
			heavy_junk = {
				naval_speed_factor = 0.2
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { raiding_admiral }
		gui_row = 4
		gui_column = 1
	}
	ghost_captain = { 
		type = navy
		modifier = {
			navy_visibility = -0.25
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { sailor_by_heart }

		gui_row = 4
		gui_column = 2
	}
	silent_boarder = { 
		type = navy
		modifier = {
			naval_torpedo_reveal_chance_factor = -0.15
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { sailor_by_heart }

		gui_row = 5
		gui_column = 2
	}

	bold_one = { 
		type = navy
		modifier = {
			ships_at_battle_start = 0.5
			naval_accidents_chance = 0.2
			naval_damage_factor = 0.05
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { raiding_admiral }
		gui_row = 7
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = bold_admiral_1
		expert_advisor_trait = bold_admiral_2
		genius_advisor_trait = bold_admiral_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 200
							traits = { bold_admiral_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 100
							traits = { bold_admiral_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 50
							traits = { bold_admiral_1 }
						}
					}
				}
			}
		}
	}
	the_hit = { 
		type = navy
		modifier = {
			navy_screen_attack_factor = 0.1
			naval_enemy_fleet_size_ratio_penalty_factor = 0.5
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { bold_one }

		gui_row = 6
		gui_column = 2
	}
	the_run = { 
		type = navy
		modifier = {
			naval_retreat_chance = 0.25
			naval_retreat_speed = 0.5
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { bold_one }

		gui_row = 7
		gui_column = 2
	}
	and_the_repairmaster = { 
		type = navy
		modifier = {
			repair_speed_factor = 0.4
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { bold_one }

		gui_row = 8
		gui_column = 2

		slot = head_of_weaponry
		specialist_advisor_trait = shipwright_guildmaster_1
		expert_advisor_trait = shipwright_guildmaster_2
		genius_advisor_trait = shipwright_guildmaster_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 200
							traits = { shipwright_guildmaster_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 100
							traits = { shipwright_guildmaster_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = head_of_weaponry
							cost = 50
							traits = { shipwright_guildmaster_1 }
						}
					}
				}
			}
		}
	}

	fleet_coordinator = { 
		type = navy
		modifier = {
			naval_coordination = 0.2
			navy_org = 10
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = assignable_trait
		all_parents = { naval_strategist }
		gui_row = 9
		gui_column = 1
	}
	maneuver_expert = { 
		type = navy
		modifier = {
			screening_efficiency = 0.05
			naval_coordination = 0.05
			positioning = 0.05
			naval_speed_factor = 0.05
			naval_morale_factor = 0.1
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { fleet_coordinator }

		gui_row = 9
		gui_column = 2
	}

	trait_blockade_runner = { 
		type = navy
		modifier = {
			screening_efficiency = 0.1
			naval_retreat_chance = 0.1
			naval_retreat_speed = 0.1
			convoy_retreat_speed = 0.25
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = assignable_trait
		all_parents = { naval_strategist }
		mutually_exclusive = terror_of_the_sea
		gui_row = 10
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = former_smuggler_1
		expert_advisor_trait = former_smuggler_2
		genius_advisor_trait = former_smuggler_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 200
							traits = { former_smuggler_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 100
							traits = { former_smuggler_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 50
							traits = { former_smuggler_1 }
						}
					}
				}
			}
		}
	}
	terror_of_the_sea = { 
		type = navy
		modifier = {
			naval_enemy_retreat_chance = 0.3
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		all_parents = { naval_strategist }
		mutually_exclusive = trait_blockade_runner
		gui_row = 11
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = former_pirate_1
		expert_advisor_trait = former_pirate_2
		genius_advisor_trait = former_pirate_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 200
							traits = { former_pirate_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 100
							traits = { former_pirate_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 50
							traits = { former_pirate_1 }
						}
					}
				}
			}
		}
	}

	trait_search_pattern_expert = {
		type = navy
		modifier = {
			spotting_chance = 0.2
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		all_parents = { trait_spotter }
		
		gui_row = 12
		gui_column = 1
	}
	ship_detector = {
		type = navy
		modifier = {
			naval_detection = 0.3
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		all_parents = { trait_search_pattern_expert }
		
		gui_row = 12
		gui_column = 2
	}

	trait_mine_sweeper = { 
		type = navy
		modifier = {
			mines_sweeping_by_fleets_factor = 0.25
			naval_mines_effect_reduction = 0.25
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		all_parents = { trait_spotter }
		mutually_exclusive = trait_mine_layer
		gui_row = 13
		gui_column = 1
	}
	trait_mine_layer = { 
		type = navy
		modifier = {
			mines_planting_by_fleets_factor = 0.25
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		all_parents = { trait_spotter }
		mutually_exclusive = trait_mine_sweeper
		gui_row = 14
		gui_column = 1
	}
	

##################################
# navy terrain trait
##################################
	arctic_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_weather = arctic_water
		}
		
		cost = 1000
		modifier = {
			naval_attrition = -0.08
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 0
	}
	trait_arctic_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			naval_attrition = -0.08
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { arctic_water_specialist }
		
		trait_type = assignable_terrain_trait
		gui_row = 0
	}

	trait_inshore_fighter = {
		type = navy
		gain_xp = {
			OR = {
				is_fighting_in_terrain = water_fjords
				is_fighting_in_terrain = water_great_lake
			}
		}
		
		cost = 1000
		modifier = {
			water_fjords = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
			water_great_lake = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 1
	}
	trait_inshore_fighter_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_fjords = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
			water_great_lake = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { trait_inshore_fighter }
		
		trait_type = assignable_terrain_trait
		gui_row = 1
	}

	river_fighter = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = water_great_river
		}
		
		cost = 1000
		modifier = {
			water_great_river = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 2
	}
	river_fighter_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_great_river = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { river_fighter }
		
		trait_type = assignable_terrain_trait
		gui_row = 2
	}

	green_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = water_shallow_sea
		}
		
		cost = 1000
		modifier = {
			water_shallow_sea = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 3
	}
	trait_green_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_shallow_sea = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { green_water_specialist }
		
		trait_type = assignable_terrain_trait
		gui_row = 3
	}

	blue_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = ocean
		}
		
		cost = 1000
		modifier = {
			ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 4
	}
	trait_blue_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { blue_water_specialist }
		
		trait_type = assignable_terrain_trait
		gui_row = 4
	}

	black_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = water_deep_ocean
		}
		
		cost = 1000
		modifier = {
			water_deep_ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 5
	}
	trait_black_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_deep_ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		all_parents = { black_water_specialist }
		
		trait_type = assignable_terrain_trait
		gui_row = 5
	}

	explorer = {
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		
		cost = 1000
		modifier = {
			water_uncharted_ocean = {
				movement = 0.5
			}
		}

		ai_will_do = {
			factor = 0
		}

		parent = {
			traits = { arctic_water_specialist trait_inshore_fighter river_fighter green_water_specialist blue_water_specialist black_water_specialist }
			num_parents_needed = 2
		}

		trait_type = assignable_terrain_trait
		gui_row = 6

		slot = grand_admiral
		specialist_advisor_trait = navigator_1
		expert_advisor_trait = navigator_2
		genius_advisor_trait = navigator_3

		on_add = {
			if = {
				limit = {
					NOT = { has_dlc = "No Step Back" }
				}
				if = {
					limit = {
						skill > 8
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 200
							traits = { navigator_3 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 5
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 100
							traits = { navigator_2 }
						}
					}
				}
				else_if = {
					limit = {
						skill > 2
					}
					add_advisor_role = {
						advisor = {
							slot = grand_admiral
							cost = 50
							traits = { navigator_1 }
						}
					}
				}
			}
		}
	}

##################################
# status traits
##################################

	generic = { 
		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}


	### trait to mark generic advisors with a flag
	not_a_real_officer = { 
		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}

	sick = { 
		type = all
		trait_type = status_trait
		
		non_shared_modifier = {
			skill_bonus_factor = -0.5
			cannot_use_abilities = 1
		}

		new_commander_weight = {
			factor = 0
		}
	}

	wounded = { 
		type = all
		trait_type = status_trait
		
		non_shared_modifier = {
			skill_bonus_factor = -0.5
			cannot_use_abilities = 1
		}

		new_commander_weight = {
			factor = 0
		}
	}

	reassigned = { 
		type = all
		trait_type = status_trait
		
		non_shared_modifier = {
			skill_bonus_factor = -1
			cannot_use_abilities = 1
		}
		new_commander_weight = {
			factor = 0
		}
	}
	
	disgruntled = { 
		type = all
		trait_type = status_trait
		
		attack_skill = -2
		defense_skill = -2
		logistics_skill = -2
		planning_skill = -2

		new_commander_weight = {
			factor = 0
		}
	}
	
	demoted = { 
		type = all
		trait_type = status_trait
		
		attack_skill = -1
		defense_skill = -1
		logistics_skill = -1
		planning_skill = -1

		new_commander_weight = {
			factor = 0
		}
	}
	
	substance_abuser = { 
		type = all
		trait_type = status_trait
		show_in_combat = yes

		new_commander_weight = {
			factor = 0
		}
	}
	
	substance_addict = { 
		type = all
		trait_type = status_trait
		show_in_combat = yes

		allowed = {
			has_trait = substance_abuser
		}
		attack_skill = -2
		defense_skill = -2
		logistics_skill = -2
		planning_skill = -2

		new_commander_weight = {
			factor = 0
		}
	}

	cactus_juice_abuser = { 
		type = all
		trait_type = status_trait
		show_in_combat = yes

		modifier = {
			org_loss_when_moving = 0.1
		}

		new_commander_weight = {
			factor = 0
		}
	}
	
	cactus_juice_addict = { 
		type = all
		trait_type = status_trait
		show_in_combat = yes

		allowed = {
			has_trait = cactus_juice_abuser
		}

		modifier = {
			org_loss_when_moving = 0.2
		}

		attack_skill = -2
		defense_skill = -2
		logistics_skill = -2
		planning_skill = -2

		new_commander_weight = {
			factor = 0
		}
	}

	hidden_sympathies = {
		type = all
		trait_type = status_trait

		new_commander_weight = {
			factor = 0
		}
	}
	
	recently_promoted = {
		type = all
		trait_type = status_trait
		
		attack_skill = -1
		defense_skill = -1
		logistics_skill = -1
		planning_skill = -1

		new_commander_weight = {
			factor = 0
		}
	}


	##################################
	# Special trait for exiled leaders
	##################################

	exiled_leader = {
		type = land
		trait_type = exile
		gain_xp = {
			always = no # not gainable
		}
		
		modifier = {
			exiled_divisions_attack_factor = 0.1
			own_exiled_divisions_attack_factor = 0.05 
			exiled_divisions_defense_factor = 0.1
			own_exiled_divisions_defense_factor = 0.05			
		}
		
		ai_will_do = {
			factor = 1
		}
		new_commander_weight = {
			factor = 0
		}
	}

##################################
# operative traits
##################################

	operative_commando = {
		type = operative
		trait_type = basic_trait

		new_commander_weight = {
			base = 1
			modifier = {
				set_temp_variable = {
					trait_chance = FROM.modifier@commando_trait_chance_factor
				}
				add_to_temp_variable = {
					var = trait_chance
					value = 1
				}
				factor = trait_chance
			}

			modifier = {
				factor = 0.2
				FROM = {
					NOT = { has_done_agency_upgrade = upgrade_commando_training }
				}
			}
		}

		cost = 600
		gain_xp_leader = {
			ROOT = {
				has_done_agency_upgrade = upgrade_commando_training
			}
		}

		modifier = {
			own_operative_detection_chance_factor = -0.1
			target_sabotage_factor = 0.25
			target_sabotage_risk = -0.25
			operation_capture_cipher_outcome = 0.25
			operation_capture_cipher_risk = -0.25
		}
	}

	operative_seducer = {
		type = operative
		trait_type = personality_trait

		#new_commander_weight = {
		#}

		modifier = { 
			operation_infiltrate_outcome = 0.25
			operation_infiltrate_risk = -0.25
			own_operative_detection_chance_factor = -0.2
		}
	}

	operative_infiltrator = {
		type = operative
		trait_type = basic_trait

		new_commander_weight = {
			factor = 0.5
		}

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_operation = operation_rescue_operative
				operative_leader_operation = operation_infiltrate_civilian
				operative_leader_operation = operation_infiltrate_armed_forces_army
				operative_leader_operation = operation_infiltrate_armed_forces_navy
				operative_leader_operation = operation_infiltrate_armed_forces_airforce
				operative_leader_operation = operation_make_resistance_contacts
			}
		}

		modifier = { 
			operation_infiltrate_outcome = 0.25
			operation_infiltrate_risk = -0.25
		}
	}

	operative_master_interrogator = {
		type = operative
		trait_type = basic_trait

		#new_commander_weight = {
		#}

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_mission = root_out_resistance
				operative_leader_mission = counter_intelligence
			}
		}

		modifier = {
			intelligence_agency_defense = 0.2
		}
	}

	operative_linguist = {
		type = operative
		trait_type = basic_trait

		#new_commander_weight = {
		#}

		cost = 400
		gain_xp_leader = {
			NOT = { operative_leader_mission = no_mission }
			NOT = { has_nationality = FROM }
		}

		modifier = {
			# something good
		}
	}

	operative_double_agent = {
		type = operative
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0 # only from events
		}

		modifier = {
			# something good
		}
	}

	operative_tough = {
		type = operative
		trait_type = personality_trait

		#new_commander_weight = {
		#}

		modifier = {
			enemy_operative_intel_extraction_rate = -0.5
		}
	}

	operative_safe_cracker = {
		type = operative
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0.5
		}

		modifier = {
			operation_capture_cipher_outcome = 0.25
			operation_steal_tech_risk = -0.25
			operation_steal_tech_outcome = 0.25
		}
	}

	operative_well_groomed = {
		type = operative
		trait_type = basic_trait

		#new_commander_weight = {
		#}

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_mission = diplomatic_pressure
				operative_leader_mission = control_trade
			}
		}

		modifier = {
			control_trade_mission_factor = 0.2
			diplomatic_pressure_mission_factor = 0.2
		}
	}

	operative_natural_orator = {
		type = operative
		trait_type = basic_trait

		gain_xp_leader = {
			OR = {
				operative_leader_mission = propaganda
				operative_leader_mission = boost_ideology
			}
		}
		
		cost = 400
		modifier = {
			operation_coup_government_risk = -0.25
			operation_coup_government_cost = -0.25
			boost_ideology_mission_factor = 0.2
		}
	}

	operative_escape_artist = {
		type = operative
		trait_type = basic_trait
		#gained through script when successfully executing an escape operation
		modifier = {
			operation_rescue_operative_risk = -0.1
			operation_rescue_operative_cost = -0.1
		}
	}

	operative_demolition_expert = {
		type = operative
		trait_type = basic_trait

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_operation = operation_targeted_sabotage_industry
				operative_leader_operation = operation_targeted_sabotage_infrastructure
				operative_leader_operation = operation_targeted_sabotage_resources
			}
		}

		modifier = {
			target_sabotage_factor = 0.25
			target_sabotage_cost = -0.25
			boost_resistance_factor = 0.25
		}
	}


}