# leader_traits contain a list of UnitLeaderTrait with the following structure:
# trait_key = {
# 	type = all # or either of field_marshal, corps_commander, navy
#	trait_type = basic_trait # or either of status_trait, personality_trait, assignable_trait, basic_terrain_trait, assignable_terrain_trait, exile
#	attack_skill = 0 # integer
#	defense_skill = 0 # integer
#	logistics_skill = 0 # integer
#	planning_skill = 0 # integer
#	maneuvering_skill = 0 # integer
#	coordination_skill = 0 # integer
#	attack_skill_factor = 0.0 # decimal
#	defense_skill_factor = 0.0 # decimal
#	logistics_skill_factor = 0.0 # decimal
#	planning_skill_factor = 0.0 # decimal
#	maneuvering_skill_factor = 0.0 # decimal
#	coordination_skill_factor = 0.0 # decimal
#	show_in_combat = yes # boolean
#	override_effect_tooltip = "" # loc key
#	custom_effect_tooltip = "" # loc key
#	custom_prerequisite_tooltip = "" # loc key
#	custom_gain_xp_trigger_tooltip = "" # loc key
#	mutually_exclusive = other_trait # trait key
#	parent = other_trait # trait key
#	num_parents_needed = -1 # integer, -1 means "all"
#	gui_row = -1 # integer, starts at 0, -1 means auto
#	gui_column = -1 # integer, starts at 0, -1 means auto
#	allowed = trigger # scope is an unit leader
#	prerequisites = trigger # scope is an unit leader
#	gain_xp = trigger # scope is a combatant
#	gain_xp_on_spotting = 0 # integer
#	modifier = { } # list of modifiers
#	non_shared_modifier = {} #
#	corps_commander_modifier = {} #
#	field_marshal_modifier = {} #
#	sub_unit_modifiers = { # list of sub unit def
#		# e.g.
#		submarine {
#			units = {} # list of adjusters
#			# list of modifiers e.g.
#			naval_visibility = -0.1
#		}
#	}
#	trait_xp_factor = {} # list of trait_key/decimal
#	on_add = effect # scope is an unit leader
#	on_remove = effect # scope is an unit leader
#	daily_effect = effect # scope is an unit leader
#	cost = 1000 # integer
#	ai_will_do = {} # weight
#	new_commander_weight = {} # weight
#	enable_ability = ability_key
#}
leader_traits = {
	
##################################
# Personal Traits
##################################

	firelord = { 
		type = land
		trait_type = status_trait

		field_marshal_modifier = {
			max_army_group_size = 3
		}

		modifier = {
			army_morale_factor = 0.20
		}
		new_commander_weight = {
			factor = 0
		}
	}

	prince = { 
		type = land
		trait_type = status_trait

		field_marshal_modifier = {
			max_army_group_size = 1
		}

		modifier = {
			army_morale_factor = 0.10
		}
		new_commander_weight = {
			factor = 0
		}
	}

	country_leader = { 
		type = land
		trait_type = status_trait

		modifier = {
			army_morale_factor = 0.20
		}
		new_commander_weight = {
			factor = 0
		}
	}
	
	dragon_of_the_west = { 
		type = land
		trait_type = status_trait

		modifier = {
			#fort = {
			#	attack = 0.25
			#}
			#wounded_chance_factor = 0.25
			out_of_supply_factor = -0.25
			army_attack_factor = 0.1
		}
		new_commander_weight = {
			factor = 0
		}

		attack_skill = 1
		defense_skill_factor = 1
		logistics_skill_factor = 1
		logistics_skill = 1
	}

	reckless = { 
		type = land
		trait_type = status_trait
		
		modifier = {
			army_speed_factor = 0.05
			army_attack_factor = 0.05
			wounded_chance_factor = 0.5  
		}
		
		attack_skill_factor = 1
		defense_skill_factor = -1
		planning_skill_factor = 1
	}

	stubborn = { 
		type = land
		trait_type = status_trait

		non_shared_modifier = {
			reassignment_duration_factor = 1   
		}
		
		defense_skill = 1
	}

	stupid = { 
		type = land
		trait_type = status_trait

		attack_skill_factor = -1
		planning_skill_factor = -1
		defense_skill_factor = -1
		logistics_skill_factor = -1
	}

	ruthless = { 
		type = land
		trait_type = status_trait

		modifier = {
			land_reinforce_rate = 0.01
			army_morale_factor = -0.15
		}
	}

	aggressive_strategist = { 
		type = land
		trait_type = status_trait

		modifier = {
			planning_speed = 0.1
		}

		attack_skill_factor = 1
	}

	defensive_strategist = { 
		type = land
		trait_type = status_trait

		modifier = {
			max_dig_in = 1
		}

		defense_skill_factor = 1
	}

	politically_connected = { 
		type = land
		trait_type = status_trait

		non_shared_modifier = {
			promote_cost_factor = -0.5
		}
	}

	stoic = { 
		type = land
		trait_type = status_trait

		modifier = {
			army_morale_factor = 0.10
		}

		defense_skill_factor = 1
		defense_skill = 1
	}

	loyal = { 
		type = land
		trait_type = status_trait
		
		non_shared_modifier = {
			promote_cost_factor = -0.15
			reassignment_duration_factor = -0.25   
		}
	}

	calm = { 
		type = land
		trait_type = status_trait
		
		modifier = {
			max_planning = 0.1
		}
		
		non_shared_modifier = {
			experience_gain_factor = 0.25
		}
	}

	brave = { 
		type = land
		trait_type = status_trait
		
		modifier = {
			max_planning = 0.1
			army_morale_factor = 0.10
		}
		
		attack_skill = 1
	}

	defeatist = { 
		type = land
		trait_type = status_trait
		
		modifier = {
			land_reinforce_rate = -0.01
		}
		
		attack_skill = -1
	}

	consumed_by_grief = { 
		type = land
		trait_type = status_trait
		
		modifier = {
			land_reinforce_rate = -0.02
			army_morale_factor = -0.25
		}
		
		attack_skill = -3
	}

	brilliant_tactician = { 
		type = land
		trait_type = status_trait
		
		attack_skill = 1
		defense_skill = 1
	}

	brilliant_strategist = { 
		type = land
		trait_type = status_trait
		
		planning_skill = 1
		logistics_skill = 1
	}

	
##################################
# Field Marshal traits.
##################################

	skilled_staffer = { 
		type = corps_commander
		gain_xp = {
			check_variable = { num_units > 9 }
		}
		custom_gain_xp_trigger_tooltip = fighting_with_at_least_10_units
		
		cost = 1000
		
		corps_commander_modifier = {
			max_commander_army_size = 10
		}
		
		ai_will_do = {
			factor = 1
		}
		logistics_skill_factor = 2
		
		gui_row = 0
	}

	expert_staffer = { 
		type = corps_commander
		gain_xp = {
			always = no
		}
		custom_gain_xp_trigger_tooltip = fighting_with_at_least_20_units
		
		cost = 3000
		
		corps_commander_modifier = {
			max_commander_army_size = 20
		}
		
		ai_will_do = {
			factor = 1
		}
		logistics_skill_factor = 2
		trait_type = assignable_trait
		parent = skilled_staffer
		gui_row = 0
	}
	
	experienced_general = { 
		type = field_marshal
		gain_xp = {
			always = no
		}

		custom_gain_xp_trigger_tooltip = fighting_with_at_least_35_units
		cost = 6000
		
		field_marshal_modifier = {
			max_army_group_size = 3
		}
		enable_ability = extra_suplies

		corps_commander_modifier = {
			max_commander_army_size = 30
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = assignable_trait
		parent = expert_staffer
		gui_row = 0

		slot = war_minister
		specialist_advisor_trait = experienced_strategist_1
		expert_advisor_trait = experienced_strategist_2
		genius_advisor_trait = experienced_strategist_3
	}

##################################
# Field Marshal traits.
##################################

	aggressive_assaulter = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}

		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -12
		}
		modifier = {
			breakthrough_factor = 0.10
		}
		custom_effect_tooltip = INCREASED_ASSAULT_AND_SHOCK_CHANCE
		ai_will_do = {
			factor = 1
		}
		gui_row = 1
		parent = fast_planner
		trait_type = assignable_trait

		slot = war_minister
		specialist_advisor_trait = aggressive_strategist_1
		expert_advisor_trait = aggressive_strategist_2
		genius_advisor_trait = aggressive_strategist_3
	}

	tactical_mind = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}

		cost = 1000
		modifier = {
			planning_speed = 0.1
		}
		enable_ability = staff_office_plan
		corps_commander_modifier = {
			max_commander_army_size = -8
		}
		ai_will_do = {
			factor = 1
		}

		slot = war_minister
		specialist_advisor_trait = flexible_strategist_1
		expert_advisor_trait = flexible_strategist_2
		genius_advisor_trait = flexible_strategist_3

		gui_row = 7
		parent = thorough_planner
		trait_type = assignable_trait
	}

	trait_swordsmen = { 
		type = field_marshal
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_units_with_type@swordsmen > temp }
		}

		cost = 1000
		modifier = {
			modifier_army_sub_unit_swordsmen_attack_factor = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 2
		parent = powerful_attack
		trait_type = assignable_trait

		slot = head_of_weaponry
		specialist_advisor_trait = swordsmen_guildmaster_1
		expert_advisor_trait = swordsmen_guildmaster_2
		genius_advisor_trait = swordsmen_guildmaster_3
	}

	trait_skirmisher = { 
		type = field_marshal
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_units_with_type@skirmishers > temp }
		}

		cost = 1000
		modifier = {
			modifier_army_sub_unit_skirmishers_speed_factor = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 3
		parent = sneak_attack
		trait_type = assignable_trait
	}

	trait_spearmen = { 
		type = field_marshal
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_units_with_type@spearmen > temp }
		}

		cost = 1000
		modifier = {
			modifier_army_sub_unit_spearmen_defence_factor = 0.1
			modifier_army_sub_unit_spearmen_attack_factor = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 5
		parent = entrenchment
		trait_type = assignable_trait
	}

	trait_archer = { 
		type = field_marshal
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_units_with_type@archers > temp }
		}

		cost = 1000
		modifier = {
			modifier_army_sub_unit_archers_attack_factor = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 4
		parent = sneak_attack
		parent = entrenchment
		num_parents_needed = 1
		trait_type = assignable_trait
	}

	trait_pikemen = { 
		type = field_marshal
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_units_with_type@pikemen > temp }
		}

		cost = 1000
		modifier = {
			modifier_army_sub_unit_pikemen_attack_factor = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 6
		parent = last_stand
		trait_type = assignable_trait
	}

	naval_liason = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}
		cost = 600
		modifier = {
			shore_bombardment_bonus = 0.25
		}

		enable_ability = faster_naval_invasion_planning

		corps_commander_modifier = {
			max_commander_army_size = -20
		}
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_trait
		parent = naval_invader
		
		gui_row = 8

		slot = war_minister
		specialist_advisor_trait = amphibious_specialist_1
		expert_advisor_trait = amphibious_specialist_2
		genius_advisor_trait = amphibious_specialist_3
	}

	rivercrossing_expert = { 
		type = field_marshal
		gain_xp = {
			OR = {
				has_combat_modifier = river_crossing
			}
		}
		cost = 800
		corps_commander_modifier = {
			max_commander_army_size = -8
		}
		modifier = {
			river = {
				attack = 0.15
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = bridge_builder
		trait_type = assignable_trait
		gui_row = 9
	}

	organizer = { 
		type = field_marshal
		gain_xp = {
			check_variable = { num_battle_plans > 0 }
		}
		custom_gain_xp_trigger_tooltip = is_using_battle_plans
		
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			attrition = -0.10
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = endurance_general
		trait_type = assignable_trait
		gui_row = 10

		slot = quartermaster
		specialist_advisor_trait = logistician_1
		expert_advisor_trait = logistician_2
		genius_advisor_trait = logistician_3
	}

	siege_expert = {
		type = field_marshal
		gain_xp = {
			OR = {
				has_combat_modifier = fort_attack
				dig_in > 10
			}
		}
		cost = 1000
		modifier = {

		}
		enable_ability = siege_artillery

		corps_commander_modifier = {
			max_commander_army_size = -26
		}
		
		ai_will_do = {
			factor = 1
		}
		
		gui_row = 11
		
		trait_type = assignable_trait
		parent = besieger
	}

	panzer_expert = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -16
		}
		modifier = {
			army_armor_defence_factor = 0.10 
		}
		
		custom_effect_tooltip = INCREASED_BLITZ_AND_ENCIRCLEMENT_CHANCE
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_trait
		parent = panzer_leader
		
		mutually_exclusive = silent_raider
		mutually_exclusive = blitz_expert

		gui_row = 14
	}

	blitz_expert = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -20
		}
		modifier = {
			modifier_army_sub_unit_category_all_cavalry_attack_factor = 0.5
			modifier_army_sub_unit_category_all_cavalry_speed_factor = 0.5
		}
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_trait
		parent = light_cavalry
		parent = heavy_cavalry
		parent = panzer_leader
		num_parents_needed = 1

		mutually_exclusive = silent_raider
		mutually_exclusive = panzer_expert

		gui_row = 13
	}

	silent_raider = { 
		type = field_marshal
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -30
		}
		modifier = {
			modifier_army_sub_unit_category_all_cavalry_attack_factor = 0.5
			modifier_army_sub_unit_category_all_cavalry_defence_factor = 0.5
		}
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_trait
		parent = light_cavalry

		mutually_exclusive = blitz_expert
		mutually_exclusive = panzer_expert

		gui_row = 12
	}

##################################
# Corps Commander traits.
##################################

	offensive_infantry = { 
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_infantry > temp }
			check_variable = { num_units_offensive_combats > temp }
		}
		custom_gain_xp_trigger_tooltip = offensive_infantry_ratio_over_80
		
		cost = 1000
		modifier = {
			org_loss_when_moving = -0.30
		}
		
		ai_will_do = {
			factor = 1
		}

		#mutually_exclusive = defensive_infantry
		gui_row = 2

		slot = field_marshal
		specialist_advisor_trait = offensive_strategist_1
		expert_advisor_trait = offensive_strategist_2
		genius_advisor_trait = offensive_strategist_3
	}

	defensive_infantry = { 
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_infantry > temp }
			check_variable = { num_units_defensive_combats > temp }
		}
		custom_gain_xp_trigger_tooltip = defensive_infantry_ratio_over_80
		
		cost = 1000
		modifier = {
			army_infantry_defence_factor = 0.05
		}
		enable_ability = defensive_measures
		
		ai_will_do = {
			factor = 1
		}

		#mutually_exclusive = offensive_infantry
		gui_row = 6

		slot = field_marshal
		specialist_advisor_trait = defensive_strategist_1
		expert_advisor_trait = defensive_strategist_2
		genius_advisor_trait = defensive_strategist_3
	}

	trait_engineer = { 
		type = corps_commander
		gain_xp = {
			OR = {
				has_combat_modifier = river_crossing
				is_amphibious_invasion = yes
			}
		}
		cost = 600
		modifier = {
			equipment_capture = 0.03
		}
		
		ai_will_do = {
			factor = 1
		}
		
		mutually_exclusive = supply_organisation
		gui_row = 9

		slot = head_of_weaponry
		specialist_advisor_trait = smithing_guildmaster_1
		expert_advisor_trait = smithing_guildmaster_2
		genius_advisor_trait = smithing_guildmaster_3
	}

	supply_organisation = { 
		type = corps_commander
		
		gain_xp = {
			frontage_full = yes
		}
		cost = 600
		
		modifier = {
			supply_consumption_factor = -0.15
		}

		ai_will_do = {
			factor = 1
		}

		mutually_exclusive = trait_engineer
		gui_row = 10
	}

	cavalry_leader = { 
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.4 }
			set_temp_variable = { cmm = num_cavalry }
			add_to_temp_variable = { cmm = num_motorized }
			add_to_temp_variable = { cmm = num_mechanized }
			check_variable = { cmm > temp }
		}
		custom_gain_xp_trigger_tooltip = cavalary_ratio_over_40
		
		cost = 1000
		modifier = {
			cavalry_attack_factor = 0.10
			cavalry_defense_factor = 0.10
		}
		
		ai_will_do = {
			factor = 1
		}
		
		gui_row = 13
	}


	winter_specialist = { 
		type = corps_commander
		gain_xp = {
			OR = {
				temperature < -10
				is_fighting_in_terrain = ice_desert
			}
		}
		cost = 500
		modifier = {
			winter_attrition_factor = -0.5
			ice_desert = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		enable_ability = requisition_winter_gear
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = basic_terrain_trait
		gui_row = 7
	}

	winter_expert = { 
		type = corps_commander

		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			acclimatization_cold_climate_gain_factor = 0.40
			ice_desert = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		
		parent = winter_specialist

		trait_type = assignable_terrain_trait
		gui_row = 7

		slot = quartermaster
		specialist_advisor_trait = winter_specialist_1
		expert_advisor_trait = winter_specialist_2
		genius_advisor_trait = winter_specialist_3
	}

	desert_fox = { 
 		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = desert
				is_fighting_in_terrain = wasteland
				is_fighting_in_terrain = beach
			}
		}
		cost = 700
		modifier = {
			heat_attrition_factor = -0.5
			desert = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			wasteland = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			beach = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 0
	}

	desert_expert = { 
 		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			acclimatization_hot_climate_gain_factor = 0.40
			desert = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			wasteland = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			beach = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = desert_fox

		trait_type = assignable_terrain_trait
		gui_row = 0

		slot = quartermaster
		specialist_advisor_trait = desert_specialist_1
		expert_advisor_trait = desert_specialist_2
		genius_advisor_trait = desert_specialist_3
	}

	swamp_fox = { 
		type = corps_commander
		gain_xp = {
			is_fighting_in_terrain = marsh
		}
		cost = 700
		modifier = {
			marsh = {
				movement = 0.1
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 1
	}

	swamp_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			marsh = {
				movement = 0.1
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = swamp_fox

		trait_type = assignable_terrain_trait
		gui_row = 1
	}

	trait_mountaineer = { 
		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = mountain
				is_fighting_in_terrain = high_mountain
			}
		}
		cost = 700
		modifier = {
			mountain = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			high_mountain = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 3
	}

	trait_mountaineer_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			mountain = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			high_mountain = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = trait_mountaineer

		trait_type = assignable_terrain_trait
		gui_row = 3
	}

	hill_fighter = { 
		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = hills
				is_fighting_in_terrain = cliff
				is_fighting_in_terrain = canyon
			}
		}
		cost = 700
		modifier = {
			hills = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			cliff = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			canyon = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 2
	}

	hill_fighter_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			hills = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			cliff = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			canyon = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = hill_fighter

		trait_type = assignable_terrain_trait
		gui_row = 2
	}

	jungle_rat = { 
		type = corps_commander
		gain_xp = {
			is_fighting_in_terrain = jungle
		}
		cost = 700
		modifier = {
			jungle = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 6
	}

	jungle_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			jungle = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = jungle_rat

		trait_type = assignable_terrain_trait
		gui_row = 6

		slot = quartermaster
		specialist_advisor_trait = jungle_specialist_1
		expert_advisor_trait = jungle_specialist_2
		genius_advisor_trait = jungle_specialist_3
	}

	ranger = { 
		type = corps_commander
		gain_xp = {
			is_fighting_in_terrain = forest
		}
		cost = 700
		modifier = {
			forest = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 5
	}

	ranger_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			forest = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = ranger

		trait_type = assignable_terrain_trait
		gui_row = 5
	}

	urban_assault_specialist = { 
		type = corps_commander
		gain_xp = {
			OR = {
				is_fighting_in_terrain = urban
				is_fighting_in_terrain = village
			}
		}
		cost = 500
		modifier = {
			urban = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
			village = {
				movement = 0.05
				attack = 0.05
				defence = 0.05
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = basic_terrain_trait
		gui_row = 4
	}

	urban_assault_expert = { 
		type = corps_commander
		
		gain_xp = {
			always = no # not gainable
		}
		field_marshal_modifier = {
			max_army_group_size = -1
		}
		corps_commander_modifier = {
			max_commander_army_size = -10
		}
		modifier = {
			urban = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
			village = {
				movement = 0.05
				attack = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = urban_assault_specialist

		trait_type = assignable_terrain_trait
		gui_row = 4
	}
	
##################################
# Corps Commander assignable traits.
##################################

	fast_planner = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -6
		}
		modifier = {
			planning_speed = 0.25
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 1
		parent = offensive_infantry
		trait_type = assignable_trait
	}

	powerful_attack = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000

		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			army_infantry_attack_factor = 0.05
		}
		
		attack_skill = 2
		
		ai_will_do = {
			factor = 1
		}
		parent = offensive_infantry
		trait_type = assignable_trait
		mutually_exclusive = sneak_attack
		gui_row = 2

	}

	sneak_attack = { 
		type = corps_commander
		gain_xp = {
			OR = {
				has_flanked_opponent = yes
				opponent = { has_flanked_opponent = yes }
			}
		}
		custom_gain_xp_trigger_tooltip = has_flanked
		
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			recon_factor = 0.25
		}
		enable_ability = probing_attack

		ai_will_do = {
			factor = 1
		}

		parent = offensive_infantry
		trait_type = assignable_trait
		mutually_exclusive = powerful_attack
		gui_row = 3

		slot = field_marshal
		specialist_advisor_trait = assymetrical_strategist_1
		expert_advisor_trait = assymetrical_strategist_2
		genius_advisor_trait = assymetrical_strategist_3
	}

	entrenchment = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			dig_in_speed_factor = 0.25
			max_dig_in_factor = 0.25
		}
		
		ai_will_do = {
			factor = 1
		}

		parent = defensive_infantry
		trait_type = assignable_trait
		mutually_exclusive = last_stand
		
		gui_row = 5
	}

	last_stand = { 
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.8 }
			check_variable = { num_infantry > temp }
		}
		custom_gain_xp_trigger_tooltip = infantry_ratio_over_80
		
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			army_infantry_defence_factor = 0.10
		}
		
		ai_will_do = {
			factor = 1
		}
		
		parent = defensive_infantry
		trait_type = assignable_trait
		mutually_exclusive = entrenchment
		
		gui_row = 6
	}

	thorough_planner = { 
		type =  corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -6
		}
		modifier = {
			max_planning = 0.2
		}
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 7
		parent = defensive_infantry
		trait_type = assignable_trait
	}

	naval_invader = {
		type = corps_commander
		gain_xp = {
			is_amphibious_invasion = yes
		}
		cost = 600

		corps_commander_modifier = {
			max_commander_army_size = -4
			amphibious_invasion = 0.3 # 30% faster invasions
			invasion_preparation = -0.3
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = trait_engineer
		trait_type = assignable_trait
		gui_row = 8
	}

	bridge_builder = { 
		type = corps_commander
		gain_xp = {
			OR = {
				has_combat_modifier = river_crossing
			}
		}
		cost = 600
		modifier = {
			river = {
				attack = 0.1
			}
		}
		corps_commander_modifier = {
			max_commander_army_size = -2
		}

		enable_ability = makeshift_bridges

		ai_will_do = {
			factor = 1
		}
		parent = trait_engineer
		trait_type = assignable_trait
		gui_row = 9

		slot = field_marshal
		specialist_advisor_trait = transportation_expert_1
		expert_advisor_trait = transportation_expert_2
		genius_advisor_trait = transportation_expert_3
	}

	endurance_general = { 
 		type = corps_commander
		gain_xp = {
			OR = {
				temperature < -15
				temperature > 27
				has_combat_modifier = encircled
			}
		}
		cost = 700
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			out_of_supply_factor = -0.25
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = supply_organisation
		trait_type = assignable_trait
		gui_row = 10

		slot = quartermaster
		specialist_advisor_trait = forager_1
		expert_advisor_trait = forager_2
		genius_advisor_trait = forager_3
	}

	besieger = {
		type = corps_commander
		gain_xp = {
			OR = {
				has_combat_modifier = fort_attack
				dig_in > 10
			}
		}
		cost = 1000
		corps_commander_modifier = {
			max_commander_army_size = -4
		}
		modifier = {
			fort = {
				attack = 0.5
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		
		gui_row = 11
		
		trait_type = assignable_trait
		parent = supply_organisation
	}

	light_cavalry = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			cavalry_attack_factor = 0.10
			#cavalry_defence_factor = 0.10
		}
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_trait
		parent = cavalry_leader
		
		mutually_exclusive = heavy_cavalry
		
		gui_row = 12
	}
	
	heavy_cavalry = { 
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			#cavalry_attack_factor = 0.10
			cavalry_defence_factor = 0.10
		}
		
		ai_will_do = {
			factor = 1
		}
		
		trait_type = assignable_trait
		parent = cavalry_leader
		
		mutually_exclusive = light_cavalry
		
		gui_row = 13
	}

	panzer_leader = {
 		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.4 }
			check_variable = { num_armored > temp }
		}
		custom_gain_xp_trigger_tooltip = armored_ratio_over_40
		cost = 700
		corps_commander_modifier = {
			max_commander_army_size = -2
		}
		modifier = {
			army_armor_speed_factor = 0.05 
			army_armor_attack_factor = 0.1 
		}
		
		ai_will_do = {
			factor = 1
		}
		
		attack_skill_factor = 2
		
		trait_type = assignable_trait
		parent = cavalry_leader
		
		gui_row = 14
	}

##################################
# Naval traits.
##################################
	
	fleet_admiral = { 
		type = navy
		gain_xp = {
			capital_ship > 0.0 # at least 1 capital ship
		}
		cost = 500
		modifier = {
			navy_capital_ship_defence_factor = 0.1
			navy_capital_ship_attack_factor = 0.05
		}
		custom_gain_xp_trigger_tooltip = FLEET_ADMIRAL_TRIGGER_TT
		ai_will_do = {
			factor = 1
		}
		mutually_exclusive = raiding_admiral
		gui_row = 3
		gui_column = 0
	}

	raiding_admiral = { 
		type = navy
		gain_xp = {
			screen_ship > 0.5
			has_navy_size = {
				size > 10
				type = screen_ship
			}
		}
		cost = 500
		modifier = {
			naval_speed_factor = 0.1
			naval_retreat_chance = 0.1
			naval_retreat_speed = 0.25
		}
		custom_gain_xp_trigger_tooltip = RAIDING_ADMIRAL_TRIGGER_TT
		ai_will_do = {
			factor = 1
		}
		mutually_exclusive = fleet_admiral
		gui_row = 4
		gui_column = 0
	}

	naval_strategist = { 
		type = navy
		gain_xp = {
			is_winning = yes
		}
		cost = 500
		modifier = {
			positioning = 0.25
		}
		custom_gain_xp_trigger_tooltip = NAVAL_STRATEGIST_TRIGGER_TT
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 9
		gui_column = 0
	}

	trait_spotter = { 
		type = navy
		gain_xp = { # This trigger is not needed as it gets xp from spotting (not by combat)
			always = no 
		}
		gain_xp_on_spotting = 10
		cost = 500
		modifier = {
			spotting_chance = 0.1
		}
		custom_gain_xp_trigger_tooltip = SPOTTER_TRIGGER_TT
		
		ai_will_do = {
			factor = 1
		}
		gui_row = 12
		gui_column = 0
	}
	

##################################
# naval assignable traits
##################################

	artillery_expert = { 
		type = navy
		modifier = {
			navy_capital_ship_attack_factor = 0.15
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = fleet_admiral
		gui_row = 1
		gui_column = 1
	}
	invasion_supporter = { 
		type = navy
		modifier = {
			shore_bombardment_bonus = 0.25
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = artillery_expert
		gui_row = 0
		gui_column = 2
	}
	fire_coordinator = { 
		type = navy
		modifier = {
			naval_critical_score_chance_factor = 0.1
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = artillery_expert

		mutually_exclusive = trait_grand_admiral
		mutually_exclusive = poser

		gui_row = 1
		gui_column = 2
	}

	boarding_master = { 
		type = navy
		modifier = {
			naval_critical_effect_factor = -0.1
			naval_torpedo_hit_chance_factor = 0.3
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = fleet_admiral
		gui_row = 2
		gui_column = 1
	}
	trait_grand_admiral = { 
		type = navy
		modifier = {
			naval_critical_effect_factor = -0.1
			ships_at_battle_start = 0.3
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = screening_specialist
		parent = boarding_master
		parent = artillery_expert

		num_parents_needed = 2

		mutually_exclusive = fire_coordinator
		mutually_exclusive = poser

		gui_row = 2
		gui_column = 2

		slot = grand_admiral
		specialist_advisor_trait = naval_reformer_1
		expert_advisor_trait = naval_reformer_2
		genius_advisor_trait = naval_reformer_3
	}

	screening_specialist = { 
		type = navy
		modifier = {
			screening_efficiency = 0.25
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = fleet_admiral
		gui_row = 3
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = cautious_admiral_1
		expert_advisor_trait = cautious_admiral_2
		genius_advisor_trait = cautious_admiral_3
	}
	poser = { 
		type = navy
		modifier = {
			naval_has_potf_in_combat_attack = 0.2
			naval_has_potf_in_combat_defense = 0.1
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = screening_specialist

		mutually_exclusive = trait_grand_admiral
		mutually_exclusive = fire_coordinator

		gui_row = 3
		gui_column = 2

		slot = head_of_weaponry
		specialist_advisor_trait = shipwright_industrialist_1
		expert_advisor_trait = shipwright_industrialist_2
		genius_advisor_trait = shipwright_industrialist_3
	}


	sailor_by_heart = { 
		type = navy
		modifier = {
			
		}
		sub_unit_modifiers = {
			watertribe_raft = {
				naval_speed_factor = 0.2
			}
			watertribe_cutter_ship = {
				naval_speed_factor = 0.2
			}
			watertribe_cutter_flagship = {
				naval_speed_factor = 0.2
			}
			galley = {
				naval_speed_factor = 0.2
			}
			barque = {
				naval_speed_factor = 0.2
			}
			junk = {
				naval_speed_factor = 0.2
			}
			heavy_junk = {
				naval_speed_factor = 0.2
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = raiding_admiral
		gui_row = 4
		gui_column = 1
	}
	ghost_captain = { 
		type = navy
		modifier = {
			navy_visibility = -0.25
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = sailor_by_heart

		gui_row = 4
		gui_column = 2
	}
	silent_boarder = { 
		type = navy
		modifier = {
			naval_torpedo_reveal_chance_factor = -0.15
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = sailor_by_heart

		gui_row = 5
		gui_column = 2
	}

	bold_one = { 
		type = navy
		modifier = {
			ships_at_battle_start = 0.5
			naval_accidents_chance = 0.2
			naval_damage_factor = 0.05
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = raiding_admiral
		gui_row = 7
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = bold_admiral_1
		expert_advisor_trait = bold_admiral_2
		genius_advisor_trait = bold_admiral_3
	}
	the_hit = { 
		type = navy
		modifier = {
			navy_screen_attack_factor = 0.1
			naval_enemy_fleet_size_ratio_penalty_factor = 0.5
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = bold_one

		gui_row = 6
		gui_column = 2
	}
	the_run = { 
		type = navy
		modifier = {
			naval_retreat_chance = 0.25
			naval_retreat_speed = 0.5
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = bold_one

		gui_row = 7
		gui_column = 2
	}
	and_the_repairmaster = { 
		type = navy
		modifier = {
			repair_speed_factor = 0.4
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = bold_one

		gui_row = 8
		gui_column = 2

		slot = head_of_weaponry
		specialist_advisor_trait = shipwright_guildmaster_1
		expert_advisor_trait = shipwright_guildmaster_2
		genius_advisor_trait = shipwright_guildmaster_3
	}

	fleet_coordinator = { 
		type = navy
		modifier = {
			naval_coordination = 0.2
			navy_org = 10
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = assignable_trait
		parent = naval_strategist
		gui_row = 9
		gui_column = 1
	}
	maneuver_expert = { 
		type = navy
		modifier = {
			screening_efficiency = 0.05
			naval_coordination = 0.05
			positioning = 0.05
			naval_speed_factor = 0.05
			naval_morale_factor = 0.1
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = fleet_coordinator

		gui_row = 9
		gui_column = 2
	}

	trait_blockade_runner = { 
		type = navy
		modifier = {
			screening_efficiency = 0.1
			naval_retreat_chance = 0.1
			naval_retreat_speed = 0.1
			convoy_retreat_speed = 0.25
		}
		
		ai_will_do = {
			factor = 1
		}
		trait_type = assignable_trait
		parent = naval_strategist
		mutually_exclusive = terror_of_the_sea
		gui_row = 10
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = former_smuggler_1
		expert_advisor_trait = former_smuggler_2
		genius_advisor_trait = former_smuggler_3
	}
	terror_of_the_sea = { 
		type = navy
		modifier = {
			naval_enemy_retreat_chance = 0.3
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = assignable_trait
		parent = naval_strategist
		mutually_exclusive = trait_blockade_runner
		gui_row = 11
		gui_column = 1

		slot = grand_admiral
		specialist_advisor_trait = former_pirate_1
		expert_advisor_trait = former_pirate_2
		genius_advisor_trait = former_pirate_3
	}

	trait_search_pattern_expert = {
		type = navy
		modifier = {
			spotting_chance = 0.2
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		parent = trait_spotter
		
		gui_row = 12
		gui_column = 1
	}
	ship_detector = {
		type = navy
		modifier = {
			naval_detection = 0.3
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		parent = trait_search_pattern_expert
		
		gui_row = 12
		gui_column = 2
	}

	trait_mine_sweeper = { 
		type = navy
		modifier = {
			mines_sweeping_by_fleets_factor = 0.25
			naval_mines_effect_reduction = 0.25
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		parent = trait_spotter
		mutually_exclusive = trait_mine_layer
		gui_row = 13
		gui_column = 1
	}
	trait_mine_layer = { 
		type = navy
		modifier = {
			mines_planting_by_fleets_factor = 0.25
		}
				
		ai_will_do = {
			factor = 0
		}
		
		trait_type = assignable_trait
		parent = trait_spotter
		mutually_exclusive = trait_mine_sweeper
		gui_row = 14
		gui_column = 1
	}
	

##################################
# navy terrain trait
##################################
	arctic_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_weather = arctic_water
		}
		
		cost = 1000
		modifier = {
			naval_attrition = -0.08
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 0
	}
	trait_arctic_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			naval_attrition = -0.08
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = arctic_water_specialist
		
		trait_type = assignable_terrain_trait
		gui_row = 0
	}

	trait_inshore_fighter = {
		type = navy
		gain_xp = {
			OR = {
				is_fighting_in_terrain = water_fjords
				is_fighting_in_terrain = water_great_lake
			}
		}
		
		cost = 1000
		modifier = {
			water_fjords = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
			water_great_lake = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 1
	}
	trait_inshore_fighter_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_fjords = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
			water_great_lake = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = trait_inshore_fighter
		
		trait_type = assignable_terrain_trait
		gui_row = 1
	}

	river_fighter = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = water_great_river
		}
		
		cost = 1000
		modifier = {
			water_great_river = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 2
	}
	river_fighter_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_great_river = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = river_fighter
		
		trait_type = assignable_terrain_trait
		gui_row = 2
	}

	green_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = water_shallow_sea
		}
		
		cost = 1000
		modifier = {
			water_shallow_sea = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 3
	}
	trait_green_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_shallow_sea = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = green_water_specialist
		
		trait_type = assignable_terrain_trait
		gui_row = 3
	}

	blue_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = ocean
		}
		
		cost = 1000
		modifier = {
			ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 4
	}
	trait_blue_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = blue_water_specialist
		
		trait_type = assignable_terrain_trait
		gui_row = 4
	}

	black_water_specialist = {
		type = navy
		gain_xp = {
			is_fighting_in_terrain = water_deep_ocean
		}
		
		cost = 1000
		modifier = {
			water_deep_ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}

		ai_will_do = {
			factor = 0
		}

		trait_type = basic_terrain_trait
		gui_row = 5
	}
	trait_black_water_expert = { 
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		cost = 1000
		modifier = {
			water_deep_ocean = {
				attack = 0.1
				movement = 0.1
				defence = 0.1
			}
		}
		
		ai_will_do = {
			factor = 1
		}
		parent = black_water_specialist
		
		trait_type = assignable_terrain_trait
		gui_row = 5
	}

	explorer = {
		type = navy
		gain_xp = {
			always = no # not gainable
		}
		
		cost = 1000
		modifier = {
			water_uncharted_ocean = {
				movement = 0.5
			}
		}

		ai_will_do = {
			factor = 0
		}

		parent = arctic_water_specialist
		parent = trait_inshore_fighter
		parent = river_fighter
		parent = green_water_specialist
		parent = blue_water_specialist
		parent = black_water_specialist
		
		num_parents_needed = 2

		trait_type = assignable_terrain_trait
		gui_row = 6

		slot = grand_admiral
		specialist_advisor_trait = navigator_1
		expert_advisor_trait = navigator_2
		genius_advisor_trait = navigator_3
	}


#  #  ##  #   #  ##  #       ###  ### ###   ##  ##  #  #  ##  #   ### ### #   #     ### ###   ##  ### ###  ## 
## # #  # #   # #  # #       #  # #   #  # #   #  # ## # #  # #    #   #   # #       #  #  # #  #  #   #  #   
# ## ####  # #  #### #       ###  ##  ###   #  #  # # ## #### #    #   #    #        #  ###  ####  #   #   #  
#  # #  #  # #  #  # #       #    #   #  #   # #  # #  # #  # #    #   #    #        #  #  # #  #  #   #    # 
#  # #  #   #   #  # ###     #    ### #  # ##   ##  #  # #  # ### ###  #    #        #  #  # #  # ###  #  ##  

	old_guard_navy = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			experience_gain_factor = -0.25 
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	gentlemanly = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			naval_enemy_retreat_chance = 0.2
			navy_org = 5
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	gunnery_expert = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			
		}
		trait_xp_factor = {
			ironside = 0.5     #+100%
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	cuts_corners = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			naval_damage_factor = 0.2
			naval_defense_factor = -0.1
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	chief_engineer = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			critical_receive_chance = -0.05	
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	navy_media_personality = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			naval_has_potf_in_combat_attack = 0.1
			naval_has_potf_in_combat_defense = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	bold = { 
		type = navy
		trait_type = personality_trait
	
		modifier = {
			naval_damage_factor = 0.05
			naval_speed_factor = 0.1
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	navy_career_officer = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			experience_gain_factor = 0.1	
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	battleship_adherent = { 
		type = navy
		trait_type = personality_trait
	
		modifier = {
			navy_capital_ship_attack_factor = 0.1
			navy_anti_air_attack_factor = -0.2	
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	aviation_enthusiast = { 
		type = navy
		trait_type = personality_trait
	
		modifier = {
			
		}
		trait_xp_factor = {
			air_controller = 0.5     #+100%
		}
		ai_will_do = {
			factor = 1
		}
	}
	caustic_personality = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			ships_at_battle_start = -0.25
		}
		ai_will_do = {
			factor = 1
		}
	}
	craven = { 
		type = navy
		trait_type = personality_trait
	
		modifier = {
			naval_retreat_chance = 0.25
			naval_damage_factor = -0.05 
		}
		ai_will_do = {
			factor = 1
		}
	}
	naval_lineage = { 
		type = navy
		trait_type = personality_trait
		
		modifier = {
			naval_retreat_chance = -0.25
			ships_at_battle_start = 0.25
		}
		ai_will_do = {
			factor = 1
		}
	}

##################################
# status traits
##################################

	generic = { 
		type = all
		trait_type = personality_trait
		new_commander_weight = {
			factor = 1000
		}
	}

	sick = { 
		type = all
		trait_type = personality_trait
		
		non_shared_modifier = {
			skill_bonus_factor = -0.5
			cannot_use_abilities = 1
		}
	}

	wounded = { 
		type = all
		trait_type = personality_trait
		
		non_shared_modifier = {
			skill_bonus_factor = -0.5
			cannot_use_abilities = 1
		}
	}

	reassigned = { 
		type = all
		trait_type = personality_trait
		
		non_shared_modifier = {
			skill_bonus_factor = -1
			cannot_use_abilities = 1
		}
		new_commander_weight = {
			factor = 0
		}
	}
	
	disgruntled = { 
		type = all
		trait_type = personality_trait
		
		attack_skill = -2
		defense_skill = -2
		logistics_skill = -2
		planning_skill = -2
	}
	
	demoted = { 
		type = all
		trait_type = personality_trait
		
		attack_skill = -1
		defense_skill = -1
		logistics_skill = -1
		planning_skill = -1
	}
	
	substance_abuser = { 
		type = all
		trait_type = personality_trait
	}
	
	substance_addict = { 
		type = all
		trait_type = personality_trait
		allowed = {
			has_trait = substance_abuser
		}
		attack_skill = -2
		defense_skill = -2
		logistics_skill = -2
		planning_skill = -2
	}

	hidden_sympathies = {
		type = all
		trait_type = personality_trait
	}
	
	recently_promoted = {
		type = all
		trait_type = personality_trait
		
		attack_skill = -1
		defense_skill = -1
		logistics_skill = -1
		planning_skill = -1
	}

	# defective_geneseed = { #needs more code support, remove before launch
	# 	type = all
	# 	trait_type = status_trait
	# 	gain_xp = {
	# 		OR = {
	# 			has_division_template_spacemarine = yes
	# 			has_chaos_corruption = yes
	# 		}
	# 	}
	# 	cost = 400
	# 	modifier = {
	# 		geneseed_defect_factor = 1
	# 	}
	# }


	##################################
	# Special trait for exiled leaders
	##################################

	exiled_leader = {
		type = land
		trait_type = exile
		gain_xp = {
			always = no # not gainable
		}
		
		modifier = {
			exiled_divisions_attack_factor = 0.1
			own_exiled_divisions_attack_factor = 0.05 
			exiled_divisions_defense_factor = 0.1
			own_exiled_divisions_defense_factor = 0.05			
		}
		
		ai_will_do = {
			factor = 1
		}
		new_commander_weight = {
			factor = 0
		}
	}

	trait_SPA_nationalist_sympathies = {

		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}

	trait_SPA_falangist_loyalties = {

		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}

	trait_SPA_carlist_loyalties = {

		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}

	trait_SPR_republican_loyalties = {

		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}

	trait_SPR_stalinist_loyalties = {

		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}

	trait_SPR_anti_stalinist_loyalties = {

		type = all
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0
		}
	}

##################################
# operative traits
##################################

	operative_commando = {
		type = operative
		trait_type = basic_trait

		new_commander_weight = {
			base = 1
			modifier = {
				set_temp_variable = {
					trait_chance = FROM.modifier@commando_trait_chance_factor
				}
				add_to_temp_variable = {
					var = trait_chance
					value = 1
				}
				factor = trait_chance
			}

			modifier = {
				factor = 0.2
				FROM = {
					NOT = { has_done_agency_upgrade = upgrade_commando_training }
				}
			}
		}

		cost = 600
		gain_xp_leader = {
			ROOT = {
				has_done_agency_upgrade = upgrade_commando_training
			}
		}

		modifier = {
			own_operative_detection_chance_factor = -0.1
			target_sabotage_factor = 0.25
			target_sabotage_risk = -0.25
			operation_capture_cipher_outcome = 0.25
			operation_capture_cipher_risk = -0.25
		}
	}

	operative_seducer = {
		type = operative
		trait_type = personality_trait

		#new_commander_weight = {
		#}

		modifier = { 
			operation_infiltrate_outcome = 0.25
			operation_infiltrate_risk = -0.25
			own_operative_detection_chance_factor = -0.2
		}
	}

	operative_infiltrator = {
		type = operative
		trait_type = basic_trait

		new_commander_weight = {
			factor = 0.5
		}

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_operation = operation_rescue_operative
				operative_leader_operation = operation_infiltrate_civilian
				operative_leader_operation = operation_infiltrate_armed_forces_army
				operative_leader_operation = operation_infiltrate_armed_forces_navy
				operative_leader_operation = operation_infiltrate_armed_forces_airforce
				operative_leader_operation = operation_make_resistance_contacts
			}
		}

		modifier = { 
			operation_infiltrate_outcome = 0.25
			operation_infiltrate_risk = -0.25
		}
	}

	operative_master_interrogator = {
		type = operative
		trait_type = basic_trait

		#new_commander_weight = {
		#}

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_mission = root_out_resistance
				operative_leader_mission = counter_intelligence
			}
		}

		modifier = {
			intelligence_agency_defense = 0.2
		}
	}

	operative_linguist = {
		type = operative
		trait_type = basic_trait

		#new_commander_weight = {
		#}

		cost = 400
		gain_xp_leader = {
			NOT = { operative_leader_mission = no_mission }
			NOT = { has_nationality = FROM }
		}

		modifier = {
			# something good
		}
	}

	operative_double_agent = {
		type = operative
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0 # only from events
		}

		modifier = {
			# something good
		}
	}

	operative_tough = {
		type = operative
		trait_type = personality_trait

		#new_commander_weight = {
		#}

		modifier = {
			enemy_operative_intel_extraction_rate = -0.5
		}
	}

	operative_safe_cracker = {
		type = operative
		trait_type = personality_trait

		new_commander_weight = {
			factor = 0.5
		}

		modifier = {
			operation_capture_cipher_outcome = 0.25
			operation_steal_tech_risk = -0.25
			operation_steal_tech_outcome = 0.25
		}
	}

	operative_well_groomed = {
		type = operative
		trait_type = basic_trait

		#new_commander_weight = {
		#}

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_mission = diplomatic_pressure
				operative_leader_mission = control_trade
			}
		}

		modifier = {
			control_trade_mission_factor = 0.2
			diplomatic_pressure_mission_factor = 0.2
		}
	}

	operative_natural_orator = {
		type = operative
		trait_type = basic_trait

		gain_xp_leader = {
			OR = {
				operative_leader_mission = propaganda
				operative_leader_mission = boost_ideology
			}
		}
		
		cost = 400
		modifier = {
			operation_coup_government_risk = -0.25
			operation_coup_government_cost = -0.25
			boost_ideology_mission_factor = 0.2
		}
	}

	operative_escape_artist = {
		type = operative
		trait_type = basic_trait
		#gained through script when successfully executing an escape operation
		modifier = {
			operation_rescue_operative_risk = -0.1
			operation_rescue_operative_cost = -0.1
		}
	}

	operative_demolition_expert = {
		type = operative
		trait_type = basic_trait

		cost = 400
		gain_xp_leader = {
			OR = {
				operative_leader_operation = operation_targeted_sabotage_industry
				operative_leader_operation = operation_targeted_sabotage_infrastructure
				operative_leader_operation = operation_targeted_sabotage_resources
			}
		}

		modifier = {
			target_sabotage_factor = 0.25
			target_sabotage_cost = -0.25
			boost_resistance_factor = 0.25
		}
	}


}